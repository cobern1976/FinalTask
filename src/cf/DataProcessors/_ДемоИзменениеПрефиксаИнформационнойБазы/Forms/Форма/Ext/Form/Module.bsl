
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Не Пользователи.ЭтоПолноправныйПользователь() Тогда
		ВызватьИсключение НСтр("ru = 'Недостаточно прав для изменения префикса информационной базы.'");
	КонецЕсли;
	
	ПредыдущийПрефиксИнформационнойБазы = Неопределено;
	
	Если Параметры.Свойство("ПредыдущийПрефиксИБ") Тогда
		ПредыдущийПрефиксИнформационнойБазы = Параметры.ПредыдущийПрефиксИБ;
	КонецЕсли;
	
	СобытиеЖурналаРегистрацииОбработкаДанных = НСтр("ru = 'Префиксация объектов.Изменение префикса информационной базы'",
		ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	
	НовыйПрефиксИнформационнойБазы = ПолучитьФункциональнуюОпцию("ПрефиксИнформационнойБазы");
	
	ДатаНачалаОбработки = НачалоГода(ТекущаяДатаСеанса());
	
	РежимОбработкиДанных = "ОбработатьДанныеТекущейИнформационнойБазы";
	
	ВыполнитьОбработкуДанных = Истина;
	
	РежимВыбораПериодаОбработкиДанных = "ЗаВесьПериод";
	
	Элементы.АктивныеПользователи.Видимость = Ложь;
	Элементы.СообщениеОНеобходимостиБлокировкиРаботыПользователей.Видимость = Ложь;
	
	// Устанавливаем текущую таблицу переходов.
	ОсновнойСценарийПомощника();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ВыполнитьОбработкуДанныхПриИзмененииЗначения();
	
	РежимОбработкиДанныхПриИзмененииЗначения();
	
	РежимВыбораПериодаОбработкиДанныхПриИзмененииЗначения();
	
	ДатаНачалаОбработкиПриИзмененииЗначения();
	
	// Позиционируемся на первом шаге помощника.
	УстановитьПорядковыйНомерПерехода(1);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	ТекстПредупреждения = НСтр("ru = 'Отменить установку нового префикса информационной базы?'");
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияПроизвольнойФормы(
		ЭтотОбъект, Отказ, ТекстПредупреждения, "ЗакрытьФормуБезусловно");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НовыйПрефиксИнформационнойБазыПриИзменении(Элемент)
	Если СтрНайти(НовыйПрефиксИнформационнойБазы, "-") > 0 Тогда
		ПоказатьПредупреждение(Неопределено, НСтр("ru = 'В префиксе нельзя использовать символ ""-"".'"));
		НовыйПрефиксИнформационнойБазы = СтрЗаменить(НовыйПрефиксИнформационнойБазы, "-", "");
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

////////////////////////////////////////////////////////////////////////////////
// Поставляемая часть

&НаКлиенте
Процедура КомандаДалее(Команда)
	
	ИзменитьПорядковыйНомерПерехода(+1);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаНазад(Команда)
	
	ИзменитьПорядковыйНомерПерехода(-1);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаГотово(Команда)
	
	ЗакрытьФормуБезусловно = Истина;
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Переопределяемая часть

&НаКлиенте
Процедура ВыполнитьОбработкуДанныхПриИзменении(Элемент)
	
	ВыполнитьОбработкуДанныхПриИзмененииЗначения();
	
	РежимОбработкиДанныхПриИзмененииЗначения();
	
	РежимВыбораПериодаОбработкиДанныхПриИзмененииЗначения();
	
КонецПроцедуры

&НаКлиенте
Процедура РежимОбработкиДанныхПриИзменении(Элемент)
	
	РежимОбработкиДанныхПриИзмененииЗначения();
	
КонецПроцедуры

&НаКлиенте
Процедура РежимВыбораПериодаОбработкиДанныхПриИзменении(Элемент)
	
	РежимВыбораПериодаОбработкиДанныхПриИзмененииЗначения();
	
	ДатаНачалаОбработкиПриИзмененииЗначения();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаОбработкиПриИзменении(Элемент)
	
	ДатаНачалаОбработкиПриИзмененииЗначения();
	
КонецПроцедуры

&НаКлиенте
Процедура АктивныеПользователи(Команда)
	
	СтандартныеПодсистемыКлиент.ОткрытьСписокАктивныхПользователей();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// Поставляемая часть

&НаКлиенте
Процедура ИзменитьПорядковыйНомерПерехода(Итератор)
	
	ОчиститьСообщения();
	
	УстановитьПорядковыйНомерПерехода(ПорядковыйНомерПерехода + Итератор);
	
КонецПроцедуры

&НаКлиенте                                                                           	
Процедура УстановитьПорядковыйНомерПерехода(Знач Значение)
	
	ЭтоПереходДалее = (Значение > ПорядковыйНомерПерехода);
	
	ПорядковыйНомерПерехода = Значение;
	
	Если ПорядковыйНомерПерехода < 0 Тогда
		
		ПорядковыйНомерПерехода = 0;
		
	КонецЕсли;
	
	ПорядковыйНомерПереходаПриИзменении(ЭтоПереходДалее);
	
КонецПроцедуры

&НаКлиенте
Процедура ПорядковыйНомерПереходаПриИзменении(Знач ЭтоПереходДалее)
	
	// Выполняем обработчики событий перехода.
	ВыполнитьОбработчикиСобытийПерехода(ЭтоПереходДалее);
	
	// Устанавливаем отображение страниц.
	СтрокиПереходаТекущие = ТаблицаПереходов.НайтиСтроки(Новый Структура("ПорядковыйНомерПерехода", ПорядковыйНомерПерехода));
	
	Если СтрокиПереходаТекущие.Количество() = 0 Тогда
		ВызватьИсключение НСтр("ru = 'Не определена страница для отображения.'");
	КонецЕсли;
	
	СтрокаПереходаТекущая = СтрокиПереходаТекущие[0];
	
	Элементы.ПанельОсновная.ТекущаяСтраница  = Элементы[СтрокаПереходаТекущая.ИмяОсновнойСтраницы];
	Элементы.ПанельНавигации.ТекущаяСтраница = Элементы[СтрокаПереходаТекущая.ИмяСтраницыНавигации];
	
	// Устанавливаем текущую кнопку по умолчанию.
	КнопкаДалее = ПолучитьКнопкуФормыПоИмениКоманды(Элементы.ПанельНавигации.ТекущаяСтраница, "КомандаДалее");
	
	Если КнопкаДалее <> Неопределено Тогда
		
		КнопкаДалее.КнопкаПоУмолчанию = Истина;
		
	Иначе
		
		КнопкаГотово = ПолучитьКнопкуФормыПоИмениКоманды(Элементы.ПанельНавигации.ТекущаяСтраница, "КомандаГотово");
		
		Если КнопкаГотово <> Неопределено Тогда
			
			КнопкаГотово.КнопкаПоУмолчанию = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЭтоПереходДалее И СтрокаПереходаТекущая.ДлительнаяОперация Тогда
		
		ПодключитьОбработчикОжидания("ВыполнитьОбработчикДлительнойОперации", 0.1, Истина);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбработчикиСобытийПерехода(Знач ЭтоПереходДалее)
	
	// Обработчики событий переходов.
	Если ЭтоПереходДалее Тогда
		
		СтрокиПерехода = ТаблицаПереходов.НайтиСтроки(Новый Структура("ПорядковыйНомерПерехода", ПорядковыйНомерПерехода - 1));
		
		Если СтрокиПерехода.Количество() > 0 Тогда
			
			СтрокаПерехода = СтрокиПерехода[0];
			
			// Обработчик ПриПереходеДалее.
			Если Не ПустаяСтрока(СтрокаПерехода.ИмяОбработчикаПриПереходеДалее)
				И Не СтрокаПерехода.ДлительнаяОперация Тогда
				
				ИмяПроцедуры = "Подключаемый_[ИмяОбработчика](Отказ)";
				ИмяПроцедуры = СтрЗаменить(ИмяПроцедуры, "[ИмяОбработчика]", СтрокаПерехода.ИмяОбработчикаПриПереходеДалее);
				
				Отказ = Ложь;
				
				Результат = Вычислить(ИмяПроцедуры);
				
				Если Отказ Тогда
					
					УстановитьПорядковыйНомерПерехода(ПорядковыйНомерПерехода - 1);
					
					Возврат;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		СтрокиПерехода = ТаблицаПереходов.НайтиСтроки(Новый Структура("ПорядковыйНомерПерехода", ПорядковыйНомерПерехода + 1));
		
		Если СтрокиПерехода.Количество() > 0 Тогда
			
			СтрокаПерехода = СтрокиПерехода[0];
			
			// Обработчик ПриПереходеНазад.
			Если Не ПустаяСтрока(СтрокаПерехода.ИмяОбработчикаПриПереходеНазад)
				И Не СтрокаПерехода.ДлительнаяОперация Тогда
				
				ИмяПроцедуры = "Подключаемый_[ИмяОбработчика](Отказ)";
				ИмяПроцедуры = СтрЗаменить(ИмяПроцедуры, "[ИмяОбработчика]", СтрокаПерехода.ИмяОбработчикаПриПереходеНазад);
				
				Отказ = Ложь;
				
				Результат = Вычислить(ИмяПроцедуры);
				
				Если Отказ Тогда
					
					УстановитьПорядковыйНомерПерехода(ПорядковыйНомерПерехода + 1);
					
					Возврат;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	СтрокиПереходаТекущие = ТаблицаПереходов.НайтиСтроки(Новый Структура("ПорядковыйНомерПерехода", ПорядковыйНомерПерехода));
	
	Если СтрокиПереходаТекущие.Количество() = 0 Тогда
		ВызватьИсключение НСтр("ru = 'Не определена страница для отображения.'");
	КонецЕсли;
	
	СтрокаПереходаТекущая = СтрокиПереходаТекущие[0];
	
	Если СтрокаПереходаТекущая.ДлительнаяОперация И Не ЭтоПереходДалее Тогда
		
		УстановитьПорядковыйНомерПерехода(ПорядковыйНомерПерехода - 1);
		Возврат;
	КонецЕсли;
	
	// обработчик ПриОткрытии
	Если Не ПустаяСтрока(СтрокаПереходаТекущая.ИмяОбработчикаПриОткрытии) Тогда
		
		ИмяПроцедуры = "Подключаемый_[ИмяОбработчика](Отказ, ПропуститьСтраницу, ЭтоПереходДалее)";
		ИмяПроцедуры = СтрЗаменить(ИмяПроцедуры, "[ИмяОбработчика]", СтрокаПереходаТекущая.ИмяОбработчикаПриОткрытии);
		
		Отказ = Ложь;
		ПропуститьСтраницу = Ложь;
		
		Результат = Вычислить(ИмяПроцедуры);
		
		Если Отказ Тогда
			
			УстановитьПорядковыйНомерПерехода(ПорядковыйНомерПерехода - 1);
			
			Возврат;
			
		ИначеЕсли ПропуститьСтраницу Тогда
			
			Если ЭтоПереходДалее Тогда
				
				УстановитьПорядковыйНомерПерехода(ПорядковыйНомерПерехода + 1);
				
				Возврат;
				
			Иначе
				
				УстановитьПорядковыйНомерПерехода(ПорядковыйНомерПерехода - 1);
				
				Возврат;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбработчикДлительнойОперации()
	
	СтрокиПереходаТекущие = ТаблицаПереходов.НайтиСтроки(Новый Структура("ПорядковыйНомерПерехода", ПорядковыйНомерПерехода));
	
	Если СтрокиПереходаТекущие.Количество() = 0 Тогда
		ВызватьИсключение НСтр("ru = 'Не определена страница для отображения.'");
	КонецЕсли;
	
	СтрокаПереходаТекущая = СтрокиПереходаТекущие[0];
	
	// Обработчик ОбработкаДлительнойОперации.
	Если Не ПустаяСтрока(СтрокаПереходаТекущая.ИмяОбработчикаДлительнойОперации) Тогда
		
		ИмяПроцедуры = "Подключаемый_[ИмяОбработчика](Отказ, ПерейтиДалее)";
		ИмяПроцедуры = СтрЗаменить(ИмяПроцедуры, "[ИмяОбработчика]", СтрокаПереходаТекущая.ИмяОбработчикаДлительнойОперации);
		
		Отказ = Ложь;
		ПерейтиДалее = Истина;
		
		Результат = Вычислить(ИмяПроцедуры);
		
		Если Отказ Тогда
			
			УстановитьПорядковыйНомерПерехода(ПорядковыйНомерПерехода - 1);
			
			Возврат;
			
		ИначеЕсли ПерейтиДалее Тогда
			
			УстановитьПорядковыйНомерПерехода(ПорядковыйНомерПерехода + 1);
			
			Возврат;
			
		КонецЕсли;
		
	Иначе
		
		УстановитьПорядковыйНомерПерехода(ПорядковыйНомерПерехода + 1);
		
		Возврат;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьКнопкуФормыПоИмениКоманды(ЭлементФормы, ИмяКоманды)
	
	Для Каждого Элемент Из ЭлементФормы.ПодчиненныеЭлементы Цикл
		
		Если ТипЗнч(Элемент) = Тип("ГруппаФормы") Тогда
			
			ЭлементФормыПоИмениКоманды = ПолучитьКнопкуФормыПоИмениКоманды(Элемент, ИмяКоманды);
			
			Если ЭлементФормыПоИмениКоманды <> Неопределено Тогда
				
				Возврат ЭлементФормыПоИмениКоманды;
				
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(Элемент) = Тип("КнопкаФормы")
			И СтрНайти(Элемент.ИмяКоманды, ИмяКоманды) > 0 Тогда
			
			Возврат Элемент;
			
		Иначе
			
			Продолжить;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Переопределяемая часть - Обработчики событий переходов.

&НаКлиенте
Функция Подключаемый_СтраницаНавигацииНачалоПриПереходеДалее(Отказ)
	
	Результат = ВыполнитьОбработкуДанныхНаСервере();
	Отказ = Результат.Отказ;
	Если Результат.ОтказУстановкиМонопольногоРежима Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'С программой работают другие пользователи.
			|Для изменения префикса информационной базы необходимо завершить их работу.'"));
		Возврат "";
	КонецЕсли;
	Если Отказ Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Не удалось выполнить обработку данных.'"));
		Возврат "";
	КонецЕсли;
	
	Если Результат.ДлительнаяОперация.Статус <> "Выполняется" Тогда
		ЗавершитьОбработкуДанных(Результат.ДлительнаяОперация);
		Возврат "";
	КонецЕсли;
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.ВыводитьСообщения = Истина;
	ПараметрыОжидания.Интервал = 5;
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ВыполнитьОбработкуДанныхЗавершение", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(Результат.ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецФункции

&НаКлиенте
Функция ВыполнитьОбработкуДанныхЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ВыполнитьОбработкуДанныхЗавершениеНаСервере(Результат);
	ЗавершитьОбработкуДанных(Результат);
	
КонецФункции

&НаКлиенте
Функция ЗавершитьОбработкуДанных(Результат)
	
	Если Результат.Статус = "Выполнено" Тогда
		
		Оповестить("НаборКонстант.ПрефиксУзлаРаспределеннойИнформационнойБазы", НовыйПрефиксИнформационнойБазы, ИмяФормы);
		ПерейтиДалее();
		
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		
		ПерейтиНазад();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.КраткоеПредставлениеОшибки);
		ПоказатьПредупреждение(, НСтр("ru = 'Не удалось обработать данные.'"));
		
	Иначе	
		ПерейтиНазад();
	КонецЕсли;
	
КонецФункции
&НаСервере
Процедура ВыполнитьОбработкуДанныхЗавершениеНаСервере(Результат)
	
	ОбщегоНазначения.РазблокироватьИБ();
	Если Результат.Статус = "Выполнено" Тогда
		РезультатОбработкиДанных = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		ОбъектовОбработано = РезультатОбработкиДанных.ОбъектовОбработано;
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		ЗаписьЖурналаРегистрации(СобытиеЖурналаРегистрацииОбработкаДанных, УровеньЖурналаРегистрации.Ошибка,,, Результат.ПодробноеПредставлениеОшибки);
		РезультатОбработкиДанных = Неопределено;
		ОбъектовОбработано = 0;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция Подключаемый_Окончание_ПриОткрытии(Отказ, ПропуститьСтраницу, Знач ЭтоПереходДалее)
	
	Если ВыполнитьОбработкуДанных И ОбъектовОбработано <> 0 Тогда
		
		Если РежимОбработкиДанных = "ОбработатьВсеДанные" 
			Или РежимОбработкиДанных = "ОбработатьДанныеТекущейИнформационнойБазы"
			Или РежимОбработкиДанных = "ОбработатьПоследниеДанные"	Тогда
			
			Результат = НСтр("ru = 'Новый префикс установлен у объектов программы: %1'");
			Результат = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Результат, Формат(ОбъектовОбработано, "ЧН=0"));
			
		ИначеЕсли РежимОбработкиДанных = "СоздатьНовыеДанные" Тогда
			
			Результат = НСтр("ru = 'Создано пустых объектов с новым префиксом: %1'");
			Результат = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Результат, Формат(ОбъектовОбработано, "ЧН=0"));
			
		Иначе
			
			Результат = НСтр("ru = 'Все данные в программе остались со старым префиксом.'");
			
		КонецЕсли;
		
	Иначе
		
		Результат = НСтр("ru = 'Нет данных, в которых потребовалась установка нового префикса.'");
		
	КонецЕсли;
	
	Элементы.РезультатОбработкиДанных.Заголовок = Результат;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Переопределяемая часть - Служебные процедуры и функции.

&НаСервере
Функция ВыполнитьОбработкуДанныхНаСервере()
	
	Результат = Новый Структура("Отказ,ОтказУстановкиМонопольногоРежима,ДлительнаяОперация", Ложь, Ложь, Неопределено);
	
	// Проверка на возможность установки монопольного режима.
	Попытка
		Если Не ОбщегоНазначенияПовтИсп.РазделениеВключено() Тогда
			УстановитьПривилегированныйРежим(Истина);
		КонецЕсли;
		ОбщегоНазначения.ЗаблокироватьИБ();
		ОбщегоНазначения.РазблокироватьИБ();
		УстановитьПривилегированныйРежим(Ложь);
	Исключение
		УстановитьПривилегированныйРежим(Ложь);
		Элементы.АктивныеПользователи.Видимость = Истина;
		Элементы.СообщениеОНеобходимостиБлокировкиРаботыПользователей.Видимость = Истина;
		Результат.Отказ = Истина;
		Результат.ОтказУстановкиМонопольногоРежима = Истина;
		СообщениеОНеобходимостиБлокировкиРаботыПользователей = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
		Возврат Результат;
	КонецПопытки;
	
	Элементы.АктивныеПользователи.Видимость = Ложь;
	Элементы.СообщениеОНеобходимостиБлокировкиРаботыПользователей.Видимость = Ложь;
	
	НовыйПрефиксИнформационнойБазы = СокрЛП(НовыйПрефиксИнформационнойБазы);
	
	Если Не ВыполнитьОбработкуДанных Тогда
		
		Попытка
			
			УстановитьПривилегированныйРежим(Истина);
			Константы.ПрефиксУзлаРаспределеннойИнформационнойБазы.Установить(НовыйПрефиксИнформационнойБазы);
			
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()),,,, Результат.Отказ);
			Возврат Результат;
		КонецПопытки;
		
		Возврат Результат;
	КонецЕсли;
	
	Попытка
		ОбщегоНазначения.ЗаблокироватьИБ();
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()),,,, Результат.Отказ);
		Возврат Результат;
	КонецПопытки;
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Изменение префикса информационной базы и обработка данных'");
	Если РежимОбработкиДанных = "ОбработатьВсеДанные" Тогда
		
		ПараметрыПроцедуры = Новый Структура;
		ПараметрыПроцедуры.Вставить("НовыйПрефикс", НовыйПрефиксИнформационнойБазы);
		ПараметрыПроцедуры.Вставить("СДаты", ДатаНачалаОбработки);
		ПараметрыПроцедуры.Вставить("ПредыдущийПрефиксИнформационнойБазы", ПредыдущийПрефиксИнформационнойБазы);
		
		ДлительнаяОперация = ДлительныеОперации.ВыполнитьВФоне(
			"Обработки._ДемоИзменениеПрефиксаИнформационнойБазы.УстановитьПрефиксИБИПерепрефиксоватьВсеОбъекты",
			ПараметрыПроцедуры, ПараметрыВыполнения);
		
	ИначеЕсли РежимОбработкиДанных = "ОбработатьДанныеТекущейИнформационнойБазы" Тогда
		
		ПараметрыПроцедуры = Новый Структура;
		ПараметрыПроцедуры.Вставить("НовыйПрефикс", НовыйПрефиксИнформационнойБазы);
		ПараметрыПроцедуры.Вставить("СДаты", ДатаНачалаОбработки);
		ПараметрыПроцедуры.Вставить("ПредыдущийПрефиксИнформационнойБазы", ПредыдущийПрефиксИнформационнойБазы);
		
		ДлительнаяОперация = ДлительныеОперации.ВыполнитьВФоне(
			"Обработки._ДемоИзменениеПрефиксаИнформационнойБазы.УстановитьПрефиксИБИПерепрефиксоватьОбъектыСозданныеВЭтойИБ",
			ПараметрыПроцедуры, ПараметрыВыполнения);
		
	ИначеЕсли РежимОбработкиДанных = "СоздатьНовыеДанные" Тогда
		
		ПараметрыПроцедуры = Новый Структура;
		ПараметрыПроцедуры.Вставить("НовыйПрефикс", НовыйПрефиксИнформационнойБазы);
		ПараметрыПроцедуры.Вставить("СДаты", ДатаНачалаОбработки);
		ПараметрыПроцедуры.Вставить("ПредыдущийПрефиксИнформационнойБазы", ПредыдущийПрефиксИнформационнойБазы);
		
		ДлительнаяОперация = ДлительныеОперации.ВыполнитьВФоне(
			"Обработки._ДемоИзменениеПрефиксаИнформационнойБазы.УстановитьПрефиксИБИСоздатьОбъекты",
			ПараметрыПроцедуры, ПараметрыВыполнения);
			
	ИначеЕсли РежимОбработкиДанных = "ОбработатьПоследниеДанные" Тогда
		
		ПараметрыПроцедуры = Новый Структура;
		ПараметрыПроцедуры.Вставить("НовыйПрефикс", НовыйПрефиксИнформационнойБазы);
		ПараметрыПроцедуры.Вставить("СДаты", ДатаНачалаОбработки);
		ПараметрыПроцедуры.Вставить("ПредыдущийПрефиксИнформационнойБазы", ПредыдущийПрефиксИнформационнойБазы);
		
		ДлительнаяОперация = ДлительныеОперации.ВыполнитьВФоне(
			"Обработки._ДемоИзменениеПрефиксаИнформационнойБазы.УстановитьПрефиксИБИПерепрефиксоватьПоследниеОбъекты",
			ПараметрыПроцедуры, ПараметрыВыполнения);
			
	КонецЕсли;
	
	Если ДлительнаяОперация.Статус = "Ошибка" Тогда
		ОбщегоНазначения.РазблокироватьИБ();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ДлительнаяОперация.КраткоеПредставлениеОшибки,,,, Результат.Отказ);
	КонецЕсли;
	
	Если ДлительнаяОперация.Статус = "Выполнено" Тогда
		
		ОбщегоНазначения.РазблокироватьИБ();
		РезультатОбработкиДанных = ПолучитьИзВременногоХранилища(ДлительнаяОперация.АдресРезультата);
		ОбъектовОбработано = РезультатОбработкиДанных.ОбъектовОбработано;
		
	КонецЕсли;
	
	Результат.ДлительнаяОперация = ДлительнаяОперация;
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ВыполнитьОбработкуДанныхПриИзмененииЗначения()
	
	Элементы.РежимОбработкиДанных.Доступность = ВыполнитьОбработкуДанных;
	Элементы.РежимВыбораПериодаОбработкиДанных.Доступность = ВыполнитьОбработкуДанных;
	Элементы.ДатаНачалаОбработки.Доступность = ВыполнитьОбработкуДанных;
	
КонецПроцедуры

&НаКлиенте
Процедура РежимОбработкиДанныхПриИзмененииЗначения()
	
	Если ВыполнитьОбработкуДанных Тогда
		
		Если РежимОбработкиДанных = "ОбработатьВсеДанные" Тогда
			Элементы.ПоясненияКРежимуОбработкиДанных.ТекущаяСтраница = Элементы.ПояснениеКРежимуОбработкиВсехДанных;
		ИначеЕсли РежимОбработкиДанных = "ОбработатьДанныеТекущейИнформационнойБазы" Тогда
			Элементы.ПоясненияКРежимуОбработкиДанных.ТекущаяСтраница = Элементы.ПояснениеКРежимуОбработкиДанныхСозданныеВТекущейИнформационнойБазе;
		ИначеЕсли РежимОбработкиДанных = "СоздатьНовыеДанные" Тогда
			Элементы.ПоясненияКРежимуОбработкиДанных.ТекущаяСтраница = Элементы.ПояснениеКРежимуСозданияНовыхДанных;
		ИначеЕсли РежимОбработкиДанных = "ОбработатьПоследниеДанные" Тогда
			Элементы.ПоясненияКРежимуОбработкиДанных.ТекущаяСтраница = Элементы.ПояснениеКРежимуОбработкиПоследнихДанных;
		Иначе
			Элементы.ПоясненияКРежимуОбработкиДанных.ТекущаяСтраница = Элементы.ПояснениеКРежимуБезОбработки;
		КонецЕсли;
		
	Иначе
		Элементы.ПоясненияКРежимуОбработкиДанных.ТекущаяСтраница = Элементы.ПояснениеКРежимуБезОбработки;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РежимВыбораПериодаОбработкиДанныхПриИзмененииЗначения()
	
	Элементы.ДатаНачалаОбработки.Доступность = (РежимВыбораПериодаОбработкиДанных = "НачинаяСДаты");
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаОбработкиПриИзмененииЗначения()
	
	Если РежимВыбораПериодаОбработкиДанных = "НачинаяСДаты" Тогда
		Период = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = ', начиная с %1,'"), Формат(ДатаНачалаОбработки, "ДЛФ=DD'"));
	Иначе
		Период = "";
	КонецЕсли;
	//
	
	Пояснение = НСтр("ru = 'Новый префикс будет установлен во всех данных, введенных в программе%1.
		|Перенумерация данных может занять длительное время.'");
	Пояснение = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Пояснение, Период);
	Элементы.ДекорацияПояснениеКРежимуОбработкиВсехДанных.Заголовок = Пояснение;
	
	//
	
	Пояснение = НСтр("ru = 'Новый префикс будет установлен во всех данных, введенных в этой
		|программе%1. В данных, которые были получены из других
		|программ или узлов РИБ, и у которых - другой префикс, префикс меняться не будет.'");
	Пояснение = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Пояснение, Период);
	Элементы.ДекорацияПояснениеКРежимуОбработкиДанныхСозданныеВТекущейИнформационнойБазе.Заголовок = Пояснение;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиДалее()
	
	ИзменитьПорядковыйНомерПерехода(+1);
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиНазад()
	
	ИзменитьПорядковыйНомерПерехода(-1);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Переопределяемая часть - Инициализация переходов помощника.

&НаСервере
Процедура ОсновнойСценарийПомощника()
	
	ТаблицаПереходов.Очистить();
	
	Переход = ТаблицаПереходов.Добавить();
	Переход.ПорядковыйНомерПерехода = 1;
	Переход.ИмяОсновнойСтраницы     = "Начало";
	Переход.ИмяСтраницыНавигации    = "СтраницаНавигацииНачало";
	Переход.ИмяОбработчикаПриПереходеДалее = "СтраницаНавигацииНачалоПриПереходеДалее";
	
	Переход = ТаблицаПереходов.Добавить();
	Переход.ПорядковыйНомерПерехода = 2;
	Переход.ИмяОсновнойСтраницы     = "ОбработкаДанных";
	Переход.ИмяСтраницыНавигации    = "СтраницаНавигацииОжидание";
	
	Переход = ТаблицаПереходов.Добавить();
	Переход.ПорядковыйНомерПерехода = 3;
	Переход.ИмяОсновнойСтраницы     = "Окончание";
	Переход.ИмяСтраницыНавигации    = "СтраницаНавигацииОкончание";
	Переход.ИмяОбработчикаПриОткрытии = "Окончание_ПриОткрытии";
	
КонецПроцедуры

#КонецОбласти
