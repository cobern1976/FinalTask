////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	ИдентификаторПользователя = Пользователи.ТекущийПользователь().ИдентификаторПользователяСервиса;
	УстановитьПривилегированныйРежим(Ложь);
	
	ТекущийНомерСтраницы = 1;
	
	ЗначениеФильтраПоУмолчанию = Элементы.ФильтрОбращений.СписокВыбора.Получить(0).Значение;
	ФильтрОбращений            = ЗначениеФильтраПоУмолчанию;
	
	ОбновитьСодержимоеФормы();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ФильтрОбращенийПриИзменении(Элемент)
	
	ОбновитьСодержимоеФормы();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ "Список обращений"

&НаКлиенте
Процедура СписокОбращенийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ИдентификаторОбращения", Элемент.ТекущиеДанные.Идентификатор);
	ПараметрыФормы.Вставить("Наименование",           Элемент.ТекущиеДанные.Наименование);
	
	ОткрытьФорму("Обработка.ИнформационныйЦентр.Форма.УдалитьВзаимодействияПоОбращению", ПараметрыФормы);
	
	УстановитьПризнакПросмотренности(Элемент.ТекущиеДанные.Идентификатор);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Следующие(Команда)
	
	ОбновитьСодержимоеФормы(+1);
	
КонецПроцедуры

&НаКлиенте
Процедура Предыдущие(Команда)
	
	ОбновитьСодержимоеФормы(-1);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбратитьсяВСлужбуПоддержки(Команда)
	
	ПараметрыСообщения = СформироватьПараметрыСообщения();
	ИнформационныйЦентрКлиент.ОткрытьФормуОтправкиСообщенияВТехподдержку(ПараметрыСообщения);
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьСодержимоеФормы();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ОбновитьСодержимоеФормы(СмещениеСтраницы = 0)
	
	ТекущийНомерСтраницы = ТекущийНомерСтраницы + СмещениеСтраницы;
	
	Результат = ПолучитьСписокИКоличествоОбращенийПользователя();
	Если Результат = Неопределено Тогда 
		ВызватьИсключение НСтр("ru = 'Сервис по отображению обращений в техподдержку временно недоступен.
								|Пожалуйста, повторите попытку позже'");
	КонецЕсли;
	
	ОтобразитьЭлементыШапки(Результат);
	
	ВывестиСписокОбращений(Результат);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокИКоличествоОбращенийПользователя()
	
	ПоказатьВсеОбращения = ?(ФильтрОбращений = Элементы.ФильтрОбращений.СписокВыбора.Получить(0).Значение, Истина, Ложь);
	
	Попытка
		Прокси = ИнформационныйЦентрСервер.ПолучитьПроксиИнформационногоЦентра_1_0_1_2();
		Возврат Прокси.GetTicketsSupportService(ИдентификаторПользователя, ТекущийНомерСтраницы, ПоказатьВсеОбращения);
	Исключение
		ИмяСобытия = ИнформационныйЦентрСервер.ПолучитьИмяСобытияДляЖурналаРегистрации();
		ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка, , , ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		Возврат Неопределено;
	КонецПопытки;
	
КонецФункции

&НаСервере
Процедура ОтобразитьЭлементыШапки(Результат)
	
	КоличествоОбращений           = Результат.count;
	КоличествоОбращенийНаСтранице = Результат.countOnPage;
	
	Если КоличествоОбращений = 0 Тогда 
		Возврат;
	КонецЕсли;
	
	Диапазон = ПолучитьДиапазонОбращений(КоличествоОбращенийНаСтранице, КоличествоОбращений);
	Элементы.Диапазон.Заголовок = ПолучитьШаблонДиапазонаОбращений(Диапазон);
	
	ОтобразитьДоступностьКоманд(КоличествоОбращенийНаСтранице, КоличествоОбращений);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДиапазонОбращений(КоличествоОбращенийНаСтранице, КоличествоОбращений)
	
	Начало = (ТекущийНомерСтраницы - 1) * КоличествоОбращенийНаСтранице + 1;
	Конец  = ТекущийНомерСтраницы * КоличествоОбращенийНаСтранице;
	Конец  = ?(Конец > КоличествоОбращений, КоличествоОбращений, Конец);
	
	Возврат Новый Структура("Начало, Конец", Начало, Конец);
	
КонецФункции

&НаСервере
Функция ПолучитьШаблонДиапазонаОбращений(Диапазон)

	Шаблон = "%1 - %2";
	Шаблон = СтрШаблон(Шаблон, Диапазон.Начало, Диапазон.Конец);
	
	Возврат Шаблон;
	
КонецФункции

&НаСервере
Процедура ОтобразитьДоступностьКоманд(КоличествоОбращенийНаСтранице, КоличествоОбращений)
	
	Элементы.Следующие.Доступность  = ?(ТекущийНомерСтраницы * КоличествоОбращенийНаСтранице < КоличествоОбращений, Истина, Ложь);
	Элементы.Предыдущие.Доступность = ?(ТекущийНомерСтраницы > 1, Истина, Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ВывестиСписокОбращений(Результат)
	
	Если Результат.ticketList.Количество() = 0 Тогда 
		Возврат;
	КонецЕсли;
	
	СписокОбращений.Очистить();
	
	Для Итерация = 0 По Результат.ticketList.Количество() - 1 Цикл
		
		Обращение = Результат.ticketList.Получить(Итерация);
		
		Элемент = СписокОбращений.Добавить();
		
		Элемент.Статус              = Обращение.stage;
		Элемент.Дата                = Обращение.date;
		Элемент.Наименование        = Обращение.name;
		Элемент.Код                 = Обращение.number;
		Элемент.Идентификатор       = Обращение.id;
		Элемент.ИмеетНовыеСообщения = Обращение.havingNewMessages;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПризнакПросмотренности(Идентификатор)
	
	Фильтр = Новый Структура("Идентификатор", Идентификатор);
	МассивСтрок = СписокОбращений.НайтиСтроки(Фильтр);
	Если МассивСтрок = 0 Тогда 
		Возврат;
	КонецЕсли;
	
	МассивСтрок.Получить(0).ИмеетНовыеСообщения = Ложь;
	
КонецПроцедуры

&НаСервере
Функция СформироватьПараметрыСообщения()
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПараметрыСообщения = Новый Структура;
	ПараметрыСообщения.Вставить("ОтКого",   ИнформационныйЦентрСервер.ОпределитьАдресЭлектроннойПочтыПользователя());
	ПараметрыСообщения.Вставить("Текст",    ИнформационныйЦентрСервер.СформироватьШаблонТекстаВТехПоддержку());
	ПараметрыСообщения.Вставить("Вложения", ИнформационныйЦентрСервер.СформироватьXMLСТехническимиПараметрами());
	
	Возврат ПараметрыСообщения;
	
КонецФункции

