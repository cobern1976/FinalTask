
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	АдресДляЗагрузки = "http://cbrates.rbc.ru/tsv/cb/840.tsv";
	КудаСохранять = 0;
	
	ВидимостьДоступность(ЭтотОбъект);
	
	Элементы.ПутьНаКлиенте.КнопкаВыбора = Не ОбщегоНазначенияКлиентСервер.ЭтоВебКлиент();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	ВидимостьДоступность(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	МассивНепроверяемыхРеквизитов = Новый Массив;
	Если КудаСохранять <> 0 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ПутьНаКлиенте");
	КонецЕсли;
	Если КудаСохранять <> 1 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ПутьНаСервере");
	КонецЕсли;
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура АдресДляЗагрузкиПриИзменении(Элемент)
	АдресДляЗагрузки = СокрЛП(АдресДляЗагрузки);
КонецПроцедуры

&НаКлиенте
Процедура КудаСохранятьПриИзменении(Элемент)
	ВидимостьДоступность(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПутьНаКлиентеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ИмяФайла = ВыбратьКаталог();
	
	Если ИмяФайла <> Неопределено Тогда
		ПутьНаКлиенте = ИмяФайла;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НастройкаПроксиДоступСКлиента(Команда)
	
	ОткрытьФорму("ОбщаяФорма.ПараметрыПроксиСервера", Новый Структура("НастройкаПроксиНаКлиенте", Истина));
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаПроксиДоступССервера(Команда)
	
	ОткрытьФорму("ОбщаяФорма.ПараметрыПроксиСервера", Новый Структура("НастройкаПроксиНаКлиенте", Ложь));
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьФайл(Команда)
	ОчиститьСообщения();
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Если КудаСохранять = 0 Тогда
		Результат = ПолучениеФайловИзИнтернетаКлиент.СкачатьФайлНаКлиенте(
			АдресДляЗагрузки,
			Новый Структура("ПутьДляСохранения", ?(ПустаяСтрока(ПутьНаКлиенте), Неопределено, ПутьНаКлиенте)));
		
		Если Результат.Статус Тогда
			ПутьНаКлиенте = Результат.Путь;
			ПоказатьПредупреждение(, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'На клиенте сохранен файл ""%1""'"), Результат.Путь ));
		Иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.СообщениеОбОшибке);
		КонецЕсли;
	ИначеЕсли КудаСохранять = 1 Тогда
		Результат = СкачатьФайлНаСервере(АдресДляЗагрузки, 
			Новый Структура("ПутьДляСохранения", ?(ПустаяСтрока(ПутьНаСервере), Неопределено, ПутьНаСервере)));
		
		Если Результат.Статус Тогда
			ПутьНаСервере = Результат.Путь;
			ПоказатьПредупреждение(, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'На сервере сохранен файл ""%1""'"), Результат.Путь));
		Иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.СообщениеОбОшибке);
		КонецЕсли;
	ИначеЕсли КудаСохранять = 2 Тогда
		Результат = СкачатьФайлВоВременноеХранилище(АдресДляЗагрузки);
		
		Если Результат.Статус Тогда
			АдресВоВременномХранилище = Результат.Путь;
			ПоказатьПредупреждение(,
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Файл сохранен во временное хранилище ""%1""'"), АдресВоВременномХранилище));
		Иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.СообщениеОбОшибке);
		КонецЕсли;
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Поле ""Куда сохранять"" не заполнено'"), , "КудаСохранять");
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.КудаСохранять.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ЭтаИБФайловая");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;

	Элемент.Оформление.УстановитьЗначениеПараметра("Доступность", Ложь);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ВидимостьДоступность(Форма)
	Элементы = Форма.Элементы;
	Элементы.ПутьНаКлиенте.Доступность = (Форма.КудаСохранять = 0);
	Элементы.ПутьНаСервере.Доступность = (Форма.КудаСохранять = 1);
	Элементы.АдресВоВременномХранилище.Доступность    = (Форма.КудаСохранять = 2);
	Элементы.АдресВоВременномХранилище.ТолькоПросмотр = (Форма.КудаСохранять = 2);
КонецПроцедуры

&НаКлиенте
Функция ВыбратьКаталог()
	
	#Если ВебКлиент Тогда
	Возврат Неопределено;
	#КонецЕсли
	
	Если НЕ ЗначениеЗаполнено(АдресДляЗагрузки) Тогда
		ОчиститьСообщения();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Поле ""Что загружать"" не заполнено.'"), , "АдресДляЗагрузки");
		Возврат Неопределено;
	КонецЕсли;
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	Диалог.МножественныйВыбор = Ложь;
	Диалог.Заголовок = НСтр("ru = 'Выберите файл для сохранения'");
	Диалог.ПолноеИмяФайла = ?(ЗначениеЗаполнено(ПутьНаКлиенте), ПутьНаКлиенте, ВыделитьИмяФайла());
	
	Если НЕ Диалог.Выбрать() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат Диалог.ВыбранныеФайлы[0];
КонецФункции

&НаКлиенте
Функция ВыделитьИмяФайла()
	Результат = "";
	
	ДлинаАдреса = СтрДлина(АдресДляЗагрузки);
	Для Номер = 1 По ДлинаАдреса Цикл
		НомерСимвола = ДлинаАдреса - Номер + 1;
		Символ = Сред(АдресДляЗагрузки, НомерСимвола, 1);
		Если Символ = "\" ИЛИ Символ = "/" Тогда
			Прервать;
		КонецЕсли;
		Результат = Символ + Результат;
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

&НаСервереБезКонтекста
Функция СкачатьФайлНаСервере(АдресДляЗагрузки, ПараметрыЗагрузки)
	
	Возврат ПолучениеФайловИзИнтернета.СкачатьФайлНаСервере(АдресДляЗагрузки, ПараметрыЗагрузки);

КонецФункции

&НаСервереБезКонтекста
Функция СкачатьФайлВоВременноеХранилище(АдресДляЗагрузки)
	
	Возврат ПолучениеФайловИзИнтернета.СкачатьФайлВоВременноеХранилище(АдресДляЗагрузки);

КонецФункции

#КонецОбласти
