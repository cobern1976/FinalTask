#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

Функция НастройкиПоУмолчанию() Экспорт
	Результат = Новый Структура;
	
	Результат.Вставить("ПроверятьЗаполнение", Истина);
	
	Результат.Вставить("ПростыеДублиИспользование", Истина);
	Результат.Вставить("ПростыеДублиКоличество", 100);
	Результат.Вставить("ПростыеДублиПрефикс", НСтр("ru = 'Тест поиска дублей %1'"));
	
	Результат.Вставить("РегистрыСведенийИспользование", Истина);
	Результат.Вставить("РегистрыСведенийКоличество", 1);
	Результат.Вставить("РегистрыСведенийПрефикс", НСтр("ru = 'Дубли в регистрах сведений %1'"));
	
	Результат.Вставить("РегистрыНакопленияИспользование", Истина);
	Результат.Вставить("РегистрыНакопленияКоличество", 1);
	Результат.Вставить("РегистрыНакопленияПрефикс", НСтр("ru = 'Дубли в регистрах накопления %1'"));
	
	Возврат Результат;
КонецФункции

Функция Сгенерировать(Настройки) Экспорт
	Если Настройки = Неопределено Тогда
		Настройки = НастройкиПоУмолчанию();
	КонецЕсли;
	
	Результат = Новый Структура;
	
	НачатьТранзакцию();
	Успех = Истина;
	
	Попытка
		
		Если Успех И Настройки.ПростыеДублиИспользование Тогда
			СоздатьПростыеДубли(Настройки, Результат);
		КонецЕсли;
		
		Если Успех И Настройки.РегистрыСведенийИспользование Тогда
			Успех = СоздатьДублиИспользующиесяВРегистрахСведений(Настройки, Результат);
		КонецЕсли;
		
		Если Успех И Настройки.РегистрыНакопленияИспользование Тогда
			Успех = СоздатьДублиИспользующиесяВРегистрахНакопления(Настройки, Результат);
		КонецЕсли;
		
		Если Успех Тогда
			
			СтандартныеПодсистемыКлиентСервер.ОповеститьДинамическиеСписки(Результат, Тип("СправочникСсылка._ДемоНоменклатура"));
			
			Если Настройки.РегистрыСведенийИспользование Тогда
				СтандартныеПодсистемыКлиентСервер.ОповеститьДинамическиеСписки(Результат, Тип("СправочникСсылка.Организации"));
				СтандартныеПодсистемыКлиентСервер.ОповеститьДинамическиеСписки(Результат, Тип("СправочникСсылка._ДемоПодразделения"));
			КонецЕсли;
			
			Если Настройки.ПростыеДублиИспользование Или Настройки.РегистрыНакопленияИспользование Тогда
				ПараметрыФормы = Новый Структура("ОбластьПоискаДублей", Метаданные.Справочники._ДемоНоменклатура.ПолноеИмя());
				СтандартныеПодсистемыКлиентСервер.ВывестиФорму(
					Результат,
					"Обработка.ПоискИУдалениеДублей.Форма.ПоискДублей",
					ПараметрыФормы);
			КонецЕсли;
			
			Если Настройки.РегистрыСведенийИспользование Тогда
				ПараметрыФормы = Новый Структура("ОбластьПоискаДублей", Метаданные.Справочники._ДемоФизическиеЛица.ПолноеИмя());
				СтандартныеПодсистемыКлиентСервер.ВывестиФорму(
					Результат,
					"Обработка.ПоискИУдалениеДублей.Форма.ПоискДублей",
					ПараметрыФормы);
				ПараметрыФормы = Новый Структура("ОбластьПоискаДублей", Метаданные.Справочники.Пользователи.ПолноеИмя());
				СтандартныеПодсистемыКлиентСервер.ВывестиФорму(
					Результат,
					"Обработка.ПоискИУдалениеДублей.Форма.ПоискДублей",
					ПараметрыФормы);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Иначе
			
			ОтменитьТранзакцию();
			
		КонецЕсли;
		
		
	Исключение
		
		ОтменитьТранзакцию();
		СтандартныеПодсистемыКлиентСервер.ВывестиИнформациюОбОшибке(
			Результат,
			НСтр("ru = 'Не удалось создать дубли'"),
			ИнформацияОбОшибке());
		
	КонецПопытки;
	
	Возврат Результат;
КонецФункции

Процедура СоздатьПростыеДубли(Настройки, Результат)
	СправочникМенеджер = Справочники._ДемоНоменклатура;
	ШаблонНаименования = Настройки.ПростыеДублиПрефикс;
	Для НомерЭлемента = 1 По Настройки.ПростыеДублиКоличество Цикл
		ОригиналОбъект = СправочникМенеджер.СоздатьЭлемент();
		ОригиналОбъект.Наименование = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонНаименования,
			Формат(НомерЭлемента, "ЧГ="),
			?(НомерЭлемента = 1, "-", "" + Формат(НомерЭлемента-1, "ЧГ=")));
		ОригиналОбъект.Записать();
		ДубльОбъект = СправочникМенеджер.СоздатьЭлемент();
		ДубльОбъект.Наименование = ОригиналОбъект.Наименование;
		ДубльОбъект.Записать();
	КонецЦикла;
КонецПроцедуры

Функция СоздатьДублиИспользующиесяВРегистрахСведений(Настройки, Результат)
	// РЕГИСТР СВЕДЕНИЙ.
	
	// На базе регистра _ДемоРаботникиОрганизаций тестируется исключение поиска ссылок.
	//   - 3 вида пересечения по измерениям:
	//       - есть запись по дублю, но нет записи по оригиналу
	//       - есть запись по оригиналу, но нет записи по дублю
	//       - есть обе записи
	//   - 3 вида ресурсов и реквизитов:
	//       - Ресурс ПодразделениеОрганизации (СправочникСсылка._ДемоПодразделения).
	//       - Ресурс ЗанимаемыхСтавок (Число,4,2).
	//       - Реквизит ТабельныйНомер (Строка,10).
	//   - 4 вида их заполнения:
	//       - Заполнено и совпадает.
	//       - Заполнено и не совпадает.
	//       - Не заполнено в дубле.
	//       - Не заполнено в оригинале.
	// 3*4*4*4 = 192 варианта.
	//   Под каждый вариант нужно создать уникальный набор измерений.
	//
	// Критерием прохождение теста является то, что данные оригинала остались нетронутыми,
	//   но к ним добавились данные дубля.
	
	// Для измерения Организация требуется 192 уникальные ссылки.
	СсылкиОрганизаций = Новый Массив;
	СправочникМенеджер = Справочники.Организации;
	ШаблонНаименования = НСтр("ru = 'Измерение %1 (тест дублей)'");
	Для НомерЭлемента = 1 По 192 Цикл
		СправочникОбъект = СправочникМенеджер.СоздатьЭлемент();
		СправочникОбъект.Наименование = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонНаименования, Формат(НомерЭлемента, "ЧГ="));
		СправочникОбъект._ДемоНаименованиеСокращенное = СправочникОбъект.Наименование;
		СправочникОбъект.ПометкаУдаления = Истина;
		Если Не ЗаписатьОбъект(Настройки, Результат, СправочникОбъект, Истина) Тогда
			Возврат Ложь;
		КонецЕсли;
		СсылкиОрганизаций.Добавить(СправочникОбъект.Ссылка);
	КонецЦикла;
	
	// Для ресурса ПодразделениеОрганизации требуется 2 уникальные ссылки.
	СсылкиПодразделений = Новый Массив;
	СправочникМенеджер = Справочники._ДемоПодразделения;
	ШаблонНаименования = НСтр("ru = 'Ресурс %1 (тест дублей)'");
	Для НомерЭлемента = 1 По 2 Цикл
		СправочникОбъект = СправочникМенеджер.СоздатьЭлемент();
		СправочникОбъект.Наименование = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонНаименования, Формат(НомерЭлемента, "ЧГ="));
		СправочникОбъект.ПометкаУдаления = Истина;
		Если Не ЗаписатьОбъект(Настройки, Результат, СправочникОбъект, Истина) Тогда
			Возврат Ложь;
		КонецЕсли;
		СсылкиПодразделений.Добавить(СправочникОбъект.Ссылка);
	КонецЦикла;
	
	// Для измерения МестоХранения требуется 1 ссылка.
	Суффикс = " (" + НСтр("ru = 'Тест по ПиУД № 3'") + ")";
	Наименование = НСтр("ru = 'Склад'") + Суффикс;
	Склад = Справочники._ДемоМестаХранения.НайтиПоНаименованию(Наименование);
	Если Не ЗначениеЗаполнено(Склад) Тогда
		СправочникОбъект = Справочники._ДемоМестаХранения.СоздатьЭлемент();
		СправочникОбъект.Наименование = Наименование;
		СправочникОбъект.ПометкаУдаления = Истина;
		Если Не ЗаписатьОбъект(Настройки, Результат, СправочникОбъект, Истина) Тогда
			Возврат Ложь;
		КонецЕсли;
		Склад = СправочникОбъект.Ссылка;
	КонецЕсли;
	
	СсылкиФизическихЛиц = Новый Массив;
	СправочникМенеджер = Справочники._ДемоФизическиеЛица;
	ШаблонНаименования = Настройки.РегистрыСведенийПрефикс;
	Для НомерЭлемента = 1 По Настройки.РегистрыСведенийКоличество Цикл
		ОригиналОбъект = СправочникМенеджер.СоздатьЭлемент();
		ОригиналОбъект.Наименование = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонНаименования, Формат(НомерЭлемента, "ЧГ="));
		ОригиналОбъект.ПометкаУдаления = Истина;
		Если Не ЗаписатьОбъект(Настройки, Результат, ОригиналОбъект, Истина) Тогда
			Возврат Ложь;
		КонецЕсли;
		
		ДубльОбъект = СправочникМенеджер.СоздатьЭлемент();
		ЗаполнитьЗначенияСвойств(ДубльОбъект, ОригиналОбъект, "Наименование, ПометкаУдаления");
		ДубльОбъект.Наименование = ДубльОбъект.Наименование + "'";
		Если Не ЗаписатьОбъект(Настройки, Результат, ДубльОбъект, Ложь) Тогда
			Возврат Ложь;
		КонецЕсли;
		
		Оригинал = ОригиналОбъект.Ссылка;
		Дубль = ДубльОбъект.Ссылка;
		
		Набор1 = РегистрыСведений._ДемоРаботникиОрганизаций.СоздатьНаборЗаписей();
		Набор1.Отбор.ФизическоеЛицо.Установить(Оригинал);
		Набор2 = РегистрыСведений._ДемоРаботникиОрганизаций.СоздатьНаборЗаписей();
		Набор2.Отбор.ФизическоеЛицо.Установить(Дубль);
		
		// Измерения в виде директив.
		ВариантыЗаписей = Новый Массив;
		ВариантыЗаписей.Добавить(Новый Структура("СоздаватьОригинал, СоздаватьДубль", Истина, Ложь));
		ВариантыЗаписей.Добавить(Новый Структура("СоздаватьОригинал, СоздаватьДубль", Ложь, Истина));
		ВариантыЗаписей.Добавить(Новый Структура("СоздаватьОригинал, СоздаватьДубль", Истина, Истина));
		
		// Ресурсы можно более конкретно - в виде ссылок.
		ВариантыПоПодразделениям = Новый Массив;
		ВариантыПоПодразделениям.Добавить(Новый Структура("Оригинал, Дубль", Неопределено, СсылкиПодразделений[0]));
		ВариантыПоПодразделениям.Добавить(Новый Структура("Оригинал, Дубль", СсылкиПодразделений[0], Неопределено));
		ВариантыПоПодразделениям.Добавить(Новый Структура("Оригинал, Дубль", СсылкиПодразделений[0], СсылкиПодразделений[0]));
		ВариантыПоПодразделениям.Добавить(Новый Структура("Оригинал, Дубль", СсылкиПодразделений[0], СсылкиПодразделений[1]));
		
		ВариантыПоСтавкам = Новый Массив;
		ВариантыПоСтавкам.Добавить(Новый Структура("Оригинал, Дубль", 0, 5));
		ВариантыПоСтавкам.Добавить(Новый Структура("Оригинал, Дубль", 3, 0));
		ВариантыПоСтавкам.Добавить(Новый Структура("Оригинал, Дубль", 3, 3));
		ВариантыПоСтавкам.Добавить(Новый Структура("Оригинал, Дубль", 3, 5));
		
		ВариантыПоНомерам = Новый Массив;
		ВариантыПоНомерам.Добавить(Новый Структура("Оригинал, Дубль", "", "9"));
		ВариантыПоНомерам.Добавить(Новый Структура("Оригинал, Дубль", "7", ""));
		ВариантыПоНомерам.Добавить(Новый Структура("Оригинал, Дубль", "7", "7"));
		ВариантыПоНомерам.Добавить(Новый Структура("Оригинал, Дубль", "7", "9"));
		
		Период = НачалоГода(ТекущаяДатаСеанса());
		
		//   - 3 вида пересечения по измерениям:
		//       - есть запись по дублю, но нет записи по оригиналу
		//       - есть запись по оригиналу, но нет записи по дублю
		//       - есть обе записи.
		Индекс = -1;
		Для Каждого НастройкаЗаписи Из ВариантыЗаписей Цикл
			Для Каждого НастройкаПодразделения Из ВариантыПоПодразделениям Цикл
				Для Каждого НастройкаСтавки Из ВариантыПоСтавкам Цикл
					Для Каждого НастройкаНомера Из ВариантыПоНомерам Цикл
						Индекс = Индекс + 1;
						Организация = СсылкиОрганизаций[Индекс];
						
						Если НастройкаЗаписи.СоздаватьОригинал Тогда
							Запись1 = Набор1.Добавить();
							Запись1.Период         = Период;
							Запись1.Активность     = Истина;
							Запись1.Организация    = Организация;
							Запись1.ФизическоеЛицо = Оригинал;
							Запись1.ПодразделениеОрганизации = НастройкаПодразделения.Оригинал;
							Запись1.ЗанимаемыхСтавок         = НастройкаСтавки.Оригинал;
							Запись1.ТабельныйНомер           = НастройкаНомера.Оригинал;
						КонецЕсли;
						
						Если НастройкаЗаписи.СоздаватьДубль Тогда
							Запись2 = Набор2.Добавить();
							Запись2.Период         = Период;
							Запись2.Активность     = Истина;
							Запись2.Организация    = Организация;
							Запись2.ФизическоеЛицо = Дубль;
							Запись2.ПодразделениеОрганизации = НастройкаПодразделения.Дубль;
							Запись2.ЗанимаемыхСтавок         = НастройкаСтавки.Дубль;
							Запись2.ТабельныйНомер           = НастройкаНомера.Дубль;
						КонецЕсли;
						
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
		
		Набор1.Записать(Истина);
		Набор2.Записать(Истина);
		
	КонецЦикла;
	
	// На базе регистра _ДемоЗаведующиеМестамиХранения тестируется дата запрета (29.02.2012).
	
	СсылкиПользователей = Новый Массив;
	СправочникМенеджер = Справочники.Пользователи;
	ШаблонНаименования = Настройки.РегистрыСведенийПрефикс;
	Для НомерЭлемента = 1 По Настройки.РегистрыСведенийКоличество Цикл
		ОригиналОбъект = СправочникМенеджер.СоздатьЭлемент();
		ОригиналОбъект.Наименование = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонНаименования, Формат(НомерЭлемента, "ЧГ="));
		ОригиналОбъект.ПометкаУдаления = Истина;
		Если Не ЗаписатьОбъект(Настройки, Результат, ОригиналОбъект, Истина) Тогда
			Возврат Ложь;
		КонецЕсли;
		
		ДубльОбъект = СправочникМенеджер.СоздатьЭлемент();
		ЗаполнитьЗначенияСвойств(ДубльОбъект, ОригиналОбъект, "Наименование, ПометкаУдаления");
		ДубльОбъект.Наименование = ДубльОбъект.Наименование + "'";
		ДубльОбъект.ПометкаУдаления = Истина;
		Если Не ЗаписатьОбъект(Настройки, Результат, ДубльОбъект, Истина) Тогда
			Возврат Ложь;
		КонецЕсли;
		
		Оригинал = ОригиналОбъект.Ссылка;
		Дубль = ДубльОбъект.Ссылка;
		
		Набор3 = РегистрыСведений._ДемоЗаведующиеМестамиХранения.СоздатьНаборЗаписей();
		Набор3.Отбор.МестоХранения.Установить(Склад);
		
		Запись3 = Набор3.Добавить();
		Запись3.Период        = Дата(2001, 01, 01);
		Запись3.Пользователь  = Оригинал;
		Запись3.МестоХранения = Склад;
		
		Запись3 = Набор3.Добавить();
		Запись3.Период        = Дата(2004, 02, 01);
		Запись3.Пользователь  = Дубль;
		Запись3.МестоХранения = Склад;
		
		Запись3 = Набор3.Добавить();
		Запись3.Период        = Дата(2006, 02, 01);
		Запись3.Пользователь  = Оригинал;
		Запись3.МестоХранения = Склад;
		
		Набор3.Записать(Истина);
		
		СсылкиПользователей.Добавить(Оригинал);
		СсылкиПользователей.Добавить(Дубль);
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

Функция СоздатьДублиИспользующиесяВРегистрахНакопления(Настройки, Результат)
	// РЕГИСТР НАКОПЛЕНИЯ.
	
	// На базе регистра _ДемоОстаткиТоваровВМестахХранения тестируется следующие варианты:
	//   2 вида измерений:
	//     * Регистратор (ДокументСсылка._ДемоПоступлениеТоваров).
	//     * Организация (СправочникСсылка.Организации).
	//     По измерениям тестируется 3 вида пересечения данных:
	//       - есть запись по дублю, но нет записи по оригиналу
	//       - есть запись по оригиналу, но нет записи по дублю
	//       - есть обе записи
	//     Однако, поскольку Организация указывается в шапке документа _ДемоПоступлениеТоваров,
	//     то измерение Организация не может отличаться для одного регистратора.
	//     Поэтому измерение Организация не тестируем (генерируем 1 организацию).
	//   1 вид ресурсов:
	//     * Количество (Число, 15, 3).
	//     По ресурсам тестируется 4 вида их заполнения:
	//       - Заполнено и не совпадает.
	//       - Не заполнено в дубле.
	//       - Не заполнено в оригинале.
	//     Не смогли протестировать варианты "не заполнено", т.к. нельзя проводить документы с нулевым количеством номенклатуры.
	// 3^1*4^1 = 12 вариантов.
	//   Под каждый вариант нужно создать 12 документов _ДемоПоступлениеТоваров.
	
	Суффикс = " (" + НСтр("ru = 'Тест по ПиУД № 3'") + ")";
	
	// Для измерения Организация требуется 1 ссылка.
	Наименование = НСтр("ru = 'Организация'") + Суффикс;
	Организация = Справочники.Организации.НайтиПоНаименованию(Наименование);
	Если Не ЗначениеЗаполнено(Организация) Тогда
		СправочникОбъект = Справочники.Организации.СоздатьЭлемент();
		СправочникОбъект.Наименование = Наименование;
		СправочникОбъект._ДемоНаименованиеСокращенное = СправочникОбъект.Наименование;
		СправочникОбъект.ПометкаУдаления = Истина;
		Если Не ЗаписатьОбъект(Настройки, Результат, СправочникОбъект, Истина) Тогда
			Возврат Ложь;
		КонецЕсли;
		Организация = СправочникОбъект.Ссылка;
	КонецЕсли;
	
	// Для измерения МестоХранения требуется 1 ссылка.
	Наименование = НСтр("ru = 'Склад'") + Суффикс;
	Склад = Справочники._ДемоМестаХранения.НайтиПоНаименованию(Наименование);
	Если Не ЗначениеЗаполнено(Склад) Тогда
		СправочникОбъект = Справочники._ДемоМестаХранения.СоздатьЭлемент();
		СправочникОбъект.Наименование = Наименование;
		СправочникОбъект.ПометкаУдаления = Истина;
		Если Не ЗаписатьОбъект(Настройки, Результат, СправочникОбъект, Истина) Тогда
			Возврат Ложь;
		КонецЕсли;
		Склад = СправочникОбъект.Ссылка;
	КонецЕсли;
	
	// Для документа _ДемоПоступлениеТоваров требуется 1 партнер.
	Наименование = НСтр("ru = 'Партнер'") + Суффикс;
	Партнер = Справочники._ДемоПартнеры.НайтиПоНаименованию(Наименование);
	Если Не ЗначениеЗаполнено(Партнер) Тогда
		СправочникОбъект = Справочники._ДемоПартнеры.СоздатьЭлемент();
		СправочникОбъект.Наименование = Наименование;
		СправочникОбъект.ПометкаУдаления = Истина;
		Если Не ЗаписатьОбъект(Настройки, Результат, СправочникОбъект, Истина) Тогда
			Возврат Ложь;
		КонецЕсли;
		Партнер = СправочникОбъект.Ссылка;
	КонецЕсли;
	
	// Для документа _ДемоПоступлениеТоваров требуется 1 контрагент.
	Наименование = НСтр("ru = 'Контрагент'") + Суффикс;
	Контрагент = Справочники._ДемоКонтрагенты.НайтиПоНаименованию(Наименование);
	Если Не ЗначениеЗаполнено(Контрагент) Тогда
		СправочникОбъект = Справочники._ДемоКонтрагенты.СоздатьЭлемент();
		СправочникОбъект.Наименование = Наименование;
		СправочникОбъект.ЮридическоеФизическоеЛицо = Перечисления._ДемоЮридическоеФизическоеЛицо.ЮридическоеЛицо;
		СправочникОбъект.ПометкаУдаления = Истина;
		Если Не ЗаписатьОбъект(Настройки, Результат, СправочникОбъект, Истина) Тогда
			Возврат Ложь;
		КонецЕсли;
		Контрагент = СправочникОбъект.Ссылка;
	КонецЕсли;
	
	// Для договора требуется 1 валюта.
	Валюта = Справочники.Валюты.НайтиПоНаименованию("RUB");
	Если Не ЗначениеЗаполнено(Валюта) Тогда
		СправочникОбъект = Справочники.Валюты.СоздатьЭлемент();
		СправочникОбъект.Наименование = "RUB";
		СправочникОбъект.НаименованиеПолное = НСтр("ru = 'Российский рубль'");
		СправочникОбъект.Записать();
		Если Не ЗаписатьОбъект(Настройки, Результат, СправочникОбъект, Истина) Тогда
			Возврат Ложь;
		КонецЕсли;
		Валюта = СправочникОбъект.Ссылка;
	КонецЕсли;
	
	// Для документа _ДемоПоступлениеТоваров требуется 1 договор.
	Наименование = НСтр("ru = 'Договор'") + Суффикс;
	Договор = Справочники._ДемоДоговорыКонтрагентов.НайтиПоНаименованию(Наименование);
	Если Не ЗначениеЗаполнено(Договор) Тогда
		СправочникОбъект = Справочники._ДемоДоговорыКонтрагентов.СоздатьЭлемент();
		СправочникОбъект.Наименование = Наименование;
		СправочникОбъект.Организация = Организация;
		СправочникОбъект.Владелец = Контрагент;
		СправочникОбъект.Партнер = Партнер;
		СправочникОбъект.ВалютаРасчетов = Валюта;
		СправочникОбъект.ПометкаУдаления = Истина;
		СправочникОбъект.Записать();
		Если Не ЗаписатьОбъект(Настройки, Результат, СправочникОбъект, Истина) Тогда
			Возврат Ложь;
		КонецЕсли;
		Договор = СправочникОбъект.Ссылка;
	КонецЕсли;
	
	// Для справочника _ДемоНоменклатура требуется 1 вид.
	ШаблонНаименования = НСтр("ru = 'Партнер %1'") + Суффикс;
	СправочникОбъект = Справочники._ДемоВидыНоменклатуры.СоздатьЭлемент();
	СправочникОбъект.Наименование = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонНаименования, Формат(1, "ЧГ="));
	СправочникОбъект.ПометкаУдаления = Истина;
	Если Не ЗаписатьОбъект(Настройки, Результат, СправочникОбъект, Истина) Тогда
		Возврат Ложь;
	КонецЕсли;
	ВидНоменклатуры = СправочникОбъект.Ссылка;
	
	СправочникМенеджер = Справочники._ДемоНоменклатура;
	ШаблонНаименования = Настройки.РегистрыНакопленияПрефикс;
	Для НомерЭлемента = 1 По Настройки.РегистрыНакопленияКоличество Цикл
		ОригиналОбъект = СправочникМенеджер.СоздатьЭлемент();
		ОригиналОбъект.Наименование = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонНаименования, Формат(НомерЭлемента, "ЧГ="));
		ОригиналОбъект.ВидНоменклатуры = ВидНоменклатуры;
		ОригиналОбъект.ПометкаУдаления = Истина;
		Если Не ЗаписатьОбъект(Настройки, Результат, ОригиналОбъект, Истина) Тогда
			Возврат Ложь;
		КонецЕсли;
		
		ДубльОбъект = СправочникМенеджер.СоздатьЭлемент();
		ЗаполнитьЗначенияСвойств(ДубльОбъект, ОригиналОбъект, "Наименование, ВидНоменклатуры, ПометкаУдаления");
		ДубльОбъект.Наименование = ДубльОбъект.Наименование + "'";
		Если Не ЗаписатьОбъект(Настройки, Результат, ДубльОбъект, Ложь) Тогда
			Возврат Ложь;
		КонецЕсли;
		
		Оригинал = ОригиналОбъект.Ссылка;
		Дубль = ДубльОбъект.Ссылка;
		
		// Измерения в виде директив.
		ВариантыЗаписей = Новый Массив;
		ВариантыЗаписей.Добавить(Новый Структура("СоздаватьОригинал, СоздаватьДубль", Истина, Ложь));
		ВариантыЗаписей.Добавить(Новый Структура("СоздаватьОригинал, СоздаватьДубль", Ложь, Истина));
		ВариантыЗаписей.Добавить(Новый Структура("СоздаватьОригинал, СоздаватьДубль", Истина, Истина));
		
		// Ресурсы можно более конкретно - в виде ссылок.
		ВариантыПоКоличеству = Новый Массив;
		ВариантыПоКоличеству.Добавить(Новый Структура("Оригинал, Дубль", 3, 5));
		
		Период = НачалоГода(ТекущаяДатаСеанса());
		ДокументМенеджер = Документы._ДемоПоступлениеТоваров;
		
		//   - 3 вида пересечения по измерениям:
		//       - есть запись по дублю, но нет записи по оригиналу
		//       - есть запись по оригиналу, но нет записи по дублю
		//       - есть обе записи.
		Индекс = -1;
		Для Каждого НастройкаЗаписи Из ВариантыЗаписей Цикл
			Для Каждого НастройкаКоличества Из ВариантыПоКоличеству Цикл
				Индекс = Индекс + 1;
				
				ДокументОбъект = ДокументМенеджер.СоздатьДокумент();
				ДокументОбъект.Дата          = Период;
				ДокументОбъект.Организация   = Организация;
				ДокументОбъект.МестоХранения = Склад;
				ДокументОбъект.Партнер       = Партнер;
				ДокументОбъект.Контрагент    = Контрагент;
				ДокументОбъект.Договор       = Договор;
				
				Если НастройкаЗаписи.СоздаватьОригинал Тогда
					СтрокаТаблицы = ДокументОбъект.Товары.Добавить();
					СтрокаТаблицы.Номенклатура = Оригинал;
					СтрокаТаблицы.Количество   = НастройкаКоличества.Оригинал;
					СтрокаТаблицы.Цена         = 1;
				КонецЕсли;
				
				Если НастройкаЗаписи.СоздаватьДубль Тогда
					СтрокаТаблицы = ДокументОбъект.Товары.Добавить();
					СтрокаТаблицы.Номенклатура = Дубль;
					СтрокаТаблицы.Количество   = НастройкаКоличества.Дубль;
					СтрокаТаблицы.Цена         = 1;
				КонецЕсли;
				
				Если Не ЗаписатьОбъект(Настройки, Результат, ДокументОбъект, Истина) Тогда
					Возврат Ложь;
				КонецЕсли;
				ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
				
			КонецЦикла;
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

Функция ЗаписатьОбъект(Настройки, Результат, Объект, ВключитьБизнесЛогику)
	Если Настройки.ПроверятьЗаполнение И Не Объект.ПроверитьЗаполнение() Тогда
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Не удалось записать %1 ""%2"":'"),
			ТипЗнч(Объект),
			Строка(Объект));
		Сообщения = ПолучитьСообщенияПользователю(Истина);
		Подробно = "";
		Для Каждого СообщениеОтОбъекта Из Сообщения Цикл
			Подробно = СокрП(Подробно + Символы.ПС + Символы.ПС + СокрЛ(СообщениеОтОбъекта.Текст));
		КонецЦикла;
		СтандартныеПодсистемыКлиентСервер.ВывестиПредупреждение(Результат, Текст, Подробно);
		Возврат Ложь;
	КонецЕсли;
	ОбновлениеИнформационнойБазы.ЗаписатьОбъект(Объект, Истина, ВключитьБизнесЛогику);
	Возврат Истина;
КонецФункции

#КонецОбласти

#КонецЕсли