#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	СформироватьДвижения(Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СформироватьДвижения(Отказ)
	
	
	Движения.ОстаткиТоваров.Записывать = Истина;
	
	Для Каждого СтрокаТовара Из Товары Цикл
		
		ДвижениеПоступленияТовара(СтрокаТовара);
		Отказ = Не ОстаткиКорректны(СтрокаТовара);
		
		Если Отказ Тогда
			Сообщить("Для продажи товара " + СтрокаТовара.Номенклатура + ", недостаточно остатка на складе");
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ДвижениеПоступленияТовара(Знач СтрокаТовара)
	
	Движение = Движения.ОстаткиТоваров.Добавить();
		
	Движение.Период        = Дата;
	Движение.ВидДвижения   = ВидДвиженияНакопления.Расход;
	Движение.МестоХранения = МестоХранения;
	Движение.Номенклатура  = СтрокаТовара.Номенклатура;
	Движение.Количество    = СтрокаТовара.Количество;
	//Движение.Цена = СтрокаТовара.Цена;

КонецПроцедуры


Функция ОстаткиКорректны(Знач СтрокаТовара)
	ФлагКорректностиОстатков = Истина;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ОстаткиТоваровОстатки.КоличествоОстаток
	               |ИЗ
	               |	РегистрНакопления.ОстаткиТоваров.Остатки(
	               |			,
	               |			МестоХранения = &МестоХранения
	               |				И Номенклатура = &Номенклатура) КАК ОстаткиТоваровОстатки";
				   
				Запрос.УстановитьПараметр("МестоХранения", ЭтотОбъект.МестоХранения);
				Запрос.УстановитьПараметр("Номенклатура", СтрокаТовара.Номенклатура);
	выборка = Запрос.Выполнить().Выбрать();
	Если выборка.Следующий() И (выборка.КоличествоОстаток - СтрокаТовара.Количество) <0 Тогда
		ФлагКорректностиОстатков = Ложь;
	КонецЕсли;
	
	Возврат ФлагКорректностиОстатков;

КонецФункции // ПроверитьОстатки()


#КонецОбласти

#КонецЕсли