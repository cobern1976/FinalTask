#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Позволяет переопределить настройки плана обмена, заданные по умолчанию.
// Значения настроек по умолчанию см. в ОбменДаннымиСервер.НастройкиПланаОбменаПоУмолчанию.
// 
// Параметры:
//	Настройки - Структура - Содержит настройки по умолчанию.
//
Процедура ОпределитьНастройки(Настройки, ИдентификаторНастройки) Экспорт
	
	Настройки.ПредупреждатьОНесоответствииВерсийПравилОбмена = Ложь;
	Настройки.ЗаголовокКомандыДляСозданияНовогоОбменаДанными = НСтр("ru = 'Распределенная информационная база'");
	Настройки.НазначениеПланаОбмена = "РИБСФильтром";
	
КонецПроцедуры

// Возвращает имя файла настроек по умолчанию;
// В этот файл будут выгружены настройки обмена для приемника;
// Это значение должно быть одинаковым в плане обмена источника и приемника.
// 
// Возвращаемое значение:
//	Строка - имя файла по умолчанию для выгрузки настроек обмена данными.
//
Функция ИмяФайлаНастроекДляПриемника() Экспорт
	
	Возврат НСтр("ru = 'Настройки синхронизации распределенной информационной базы'");
	
КонецФункции

// Возвращает структуру отборов на узле плана обмена с установленными значениями по умолчанию;
// Структура настроек повторяет состав реквизитов шапки и табличных частей плана обмена;
// Для реквизитов шапки используются аналогичные по ключу и значению элементы структуры,
// а для табличных частей используются структуры,
// содержащие массивы значений полей табличных частей плана обмена.
// 
// Параметры:
//	ВерсияКорреспондента - Строка - Номер версии корреспондента. Используется, например, для
//									разного состава настроек на узле для разных версий корреспондента.
//	ИмяФормы - Строка - Имя используемой формы настройки узла. Возможно, например, использование
//						различных форм для разных версий корреспондента.
// 
// Возвращаемое значение:
//	СтруктураНастроек - Структура - структура отборов на узле плана обмена.
// 
Функция НастройкаОтборовНаУзле(ВерсияКорреспондента, ИмяФормы, ИдентификаторНастройки) Экспорт
	
	СтруктураТабличнойЧастиОрганизации = Новый Структура;
	СтруктураТабличнойЧастиОрганизации.Вставить("Организация", Новый Массив);
	
	СтруктураТабличнойЧастиПодразделения = Новый Структура;
	СтруктураТабличнойЧастиПодразделения.Вставить("Подразделение", Новый Массив);
	
	СтруктураТабличнойЧастиСклады = Новый Структура;
	СтруктураТабличнойЧастиСклады.Вставить("СкладОтправитель", Новый Массив);
	СтруктураТабличнойЧастиСклады.Вставить("СкладПолучатель",  Новый Массив);
	
	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("ДатаНачалаВыгрузкиДокументов",      НачалоГода(ТекущаяДатаСеанса()));
	СтруктураНастроек.Вставить("ИспользоватьОтборПоОрганизациям",   Ложь);
	СтруктураНастроек.Вставить("ИспользоватьОтборПоПодразделениям", Ложь);
	СтруктураНастроек.Вставить("ИспользоватьОтборПоСкладам",        Ложь);
	СтруктураНастроек.Вставить("Организации",                       СтруктураТабличнойЧастиОрганизации);
	СтруктураНастроек.Вставить("Подразделения",                     СтруктураТабличнойЧастиПодразделения);
	СтруктураНастроек.Вставить("Склады",                            СтруктураТабличнойЧастиСклады);
	
	Возврат СтруктураНастроек;
КонецФункции

// Возвращает структуру значений по умолчанию для узла;
// Структура настроек повторяет состав реквизитов шапки плана обмена;
// Для реквизитов шапки используются аналогичные по ключу и значению элементы структуры.
// 
// Параметры:
//	ВерсияКорреспондента - Строка - Номер версии корреспондента. Используется, например, для разного
//									состава значений по умолчанию на узле для разных версий корреспондента.
//	ИмяФормы - Строка - Имя используемой формы настройки значений по умолчанию.
//						Возможно, например, использование различных форм для разных версий корреспондента.
// 
// Возвращаемое значение:
//  СтруктураНастроек - Структура - структура значений по умолчанию на узле плана обмена.
// 
Функция ЗначенияПоУмолчаниюНаУзле(ВерсияКорреспондента, ИмяФормы, ИдентификаторНастройки) Экспорт
	
	Возврат Новый Структура;
	
КонецФункции

// Возвращает строку описания ограничений миграции данных для пользователя;
// Прикладной разработчик на основе установленных отборов на узле должен сформировать строку описания ограничений 
// удобную для восприятия пользователем.
// 
// Параметры:
//	НастройкаОтборовНаУзле - Структура - структура отборов на узле плана обмена,
//										 полученная при помощи функции НастройкаОтборовНаУзле().
//	ВерсияКорреспондента - Строка - Номер версии корреспондента. Используется, например, для различного
//									описания ограничений передачи данных в зависимости от версии корреспондента.
// Возвращаемое значение:
//	Строка - Строка описания ограничений миграции данных для пользователя.
//
Функция ОписаниеОграниченийПередачиДанных(НастройкаОтборовНаУзле, ВерсияКорреспондента, ИдентификаторНастройки) Экспорт
	
	ОграничениеДатаНачалаВыгрузкиДокументов = "";
	ОграничениеОтборПоОрганизациям = "";
	ОграничениеОтборПоСкладам = "";
	ОграничениеОтборПоПодразделениям = "";
	
	// Дата начала выгрузки документов.
	Если ЗначениеЗаполнено(НастройкаОтборовНаУзле.ДатаНачалаВыгрузкиДокументов) Тогда
		ОграничениеДатаНачалаВыгрузкиДокументов = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Начиная с %1'"),
			Формат(НастройкаОтборовНаУзле.ДатаНачалаВыгрузкиДокументов, "ДЛФ=DD"));
	Иначе
		ОграничениеДатаНачалаВыгрузкиДокументов = НСтр("ru = 'За весь период ведения учета в программе'");
	КонецЕсли;
	
	// отбор по организациям
	Если НастройкаОтборовНаУзле.ИспользоватьОтборПоОрганизациям Тогда
		СтрокаПредставленияОтбора = СтрСоединить(НастройкаОтборовНаУзле.Организации.Организация, "; ");
		ОграничениеОтборПоОрганизациям = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Только по организациям: %1'"), СтрокаПредставленияОтбора);
	Иначе
		ОграничениеОтборПоОрганизациям = НСтр("ru = 'По всем организациям'");
	КонецЕсли;
	
	// отбор по подразделениям
	Если НастройкаОтборовНаУзле.ИспользоватьОтборПоПодразделениям Тогда
		СтрокаПредставленияОтбора = СтрСоединить(НастройкаОтборовНаУзле.Подразделения.Подразделение, "; ");
		ОграничениеОтборПоПодразделениям = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Только по подразделениям: %1'"), СтрокаПредставленияОтбора);
	Иначе
		ОграничениеОтборПоПодразделениям = НСтр("ru = 'По всем подразделениям'");
	КонецЕсли;
	
	// отбор по складам
	Если НастройкаОтборовНаУзле.ИспользоватьОтборПоСкладам Тогда
		СтрокаПредставленияОтбора = СтрСоединить(НастройкаОтборовНаУзле.Склады.Склад, "; ");
		ОграничениеОтборПоСкладам = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Только по складам: %1'"), СтрокаПредставленияОтбора);
	Иначе
		ОграничениеОтборПоСкладам = НСтр("ru = 'По всем складам'");
	КонецЕсли;
	
	Возврат (
		НСтр("ru = 'Выгружать документы и справочную информацию:'")
		+ Символы.ПС
		+ ОграничениеДатаНачалаВыгрузкиДокументов
		+ Символы.ПС
		+ ОграничениеОтборПоОрганизациям
		+ Символы.ПС
		+ ОграничениеОтборПоПодразделениям
		+ Символы.ПС
		+ ОграничениеОтборПоСкладам);
КонецФункции

// Возвращает строку описания значений по умолчанию для пользователя;
// Прикладной разработчик на основе установленных значений по умолчанию на узле должен сформировать строку описания 
// удобную для восприятия пользователем.
// 
// Параметры:
//	ЗначенияПоУмолчаниюНаУзле - Структура - структура значений по умолчанию на узле плана обмена,
//											полученная при помощи функции ЗначенияПоУмолчаниюНаУзле().
//	ВерсияКорреспондента - Строка - Номер версии корреспондента. Используется, например, для различного
//									описания значений по умолчанию в зависимости от версии корреспондента.
// 
// Возвращаемое значение:
//  Строка - строка описания для пользователя значений по умолчанию.
//
Функция ОписаниеЗначенийПоУмолчанию(ЗначенияПоУмолчаниюНаУзле, ВерсияКорреспондента, ИдентификаторНастройки) Экспорт
	
	Возврат ".";
	
КонецФункции

// Возвращает пользовательскую форму для создания начального образа базы.
// Эта форма будет открыта после завершения настройки обмена с помощью помощника.
// Для планов обмена не РИБ функция возвращает пустую строку.
//
// Возвращаемое значение:
//  Строка - имя используемой формы.
//
// Пример:
//	Возврат "ПланОбмена.ОбменВРаспределеннойИнформационнойБазе.Форма.ФормаСозданияНачальногоОбраза";
//
Функция ИмяФормыСозданияНачальногоОбраза() Экспорт
	
	Возврат "ОбщаяФорма.СозданиеНачальногоОбразаСФайлами";
	
КонецФункции

// Определяет, будет ли использоваться помощник для создания новых узлов плана обмена.
//
// Возвращаемое значение:
//  Булево - признак использования помощника.
//
Функция ИспользоватьПомощникСозданияОбменаДанными() Экспорт
	
	Возврат Истина;
	
КонецФункции

// Возвращает массив используемых транспортов сообщений для этого плана обмена.
//
// Возвращаемое значение:
//	Массив - массив содержит значения перечисления ВидыТранспортаСообщенийОбмена.
//
// Пример:
// 1. Если план обмена поддерживает только два транспорта сообщений FILE и FTP,
// то тело функции следует определить следующим образом:
//
//	Результат = Новый Массив;
//	Результат.Добавить(Перечисления.ВидыТранспортаСообщенийОбмена.FILE);
//	Результат.Добавить(Перечисления.ВидыТранспортаСообщенийОбмена.FTP);
//	Возврат Результат;
//
// 2. Если план обмена поддерживает все транспорты сообщений, определенных в конфигурации,
// то тело функции следует определить следующим образом:
//
//	Возврат ОбменДаннымиСервер.ВсеТранспортыСообщенийОбменаКонфигурации();
//
Функция ИспользуемыеТранспортыСообщенийОбмена() Экспорт
	
	Возврат ОбменДаннымиСервер.ВсеТранспортыСообщенийОбменаКонфигурации();
	
	Результат = Новый Массив;
	Результат.Добавить(Перечисления.ВидыТранспортаСообщенийОбмена.FILE);
	Результат.Добавить(Перечисления.ВидыТранспортаСообщенийОбмена.FTP);
	Результат.Добавить(Перечисления.ВидыТранспортаСообщенийОбмена.EMAIL);
	
	Возврат Результат;
	
КонецФункции

// Устанавливает признак использования плана обмена для организации обмена в модели сервиса.
// Если признак установлен, то в сервисе можно включить обмен данными
// с использованием этого плана обмена.
// Если признак не установлен, то план обмена будет использоваться только
// для обмена в локальном режиме работы конфигурации.
//
// Возвращаемое значение:
//	Булево - признак использования плана обмена в модели сервиса.
//
Функция ПланОбменаИспользуетсяВМоделиСервиса() Экспорт
	
	Возврат Ложь;
	
КонецФункции

// Возвращает признак того, что план обмена поддерживает обмен данными с корреспондентом, работающим в модели сервиса.
// Если признак установлен, то становится возможным создать обмен данными когда эта информационная база
// работает в локальном режиме, а корреспондент в модели сервиса.
//
// Возвращаемое значение:
//	Булево - признак возможности настройки обмена с корреспондентов в модели сервиса.
//
Функция КорреспондентВМоделиСервиса() Экспорт
	
	Возврат Ложь;
	
КонецФункции

// Задает краткую информацию по обмену, выводимую при настройке синхронизации данных.
//
// Возвращаемое значение:
//	Строка - краткая информация о настраиваемом обмене.
//
Функция КраткаяИнформацияПоОбмену(ИдентификаторНастройки) Экспорт
	
	Возврат НСтр("ru = 'Распределенная информационная база представляет собой иерархическую структуру, состоящую из отдельных информационных баз системы «1С:Предприятие» - узлов распределенной информационной базы, между которыми организована синхронизация конфигурации и данных. Главной особенностью распределенных информационных баз является передача изменений конфигурации в подчиненные узлы. Имеется возможность настраивать ограничения миграции данных, например по организациям.'");

КонецФункции

// Задает подробную информацию по обмену, выводимую при настройке синхронизации данных.
//
// Возвращаемое значение:
//	Строка - Ссылка на подробную информацию по настраиваемой синхронизации в виде гиперссылки или полного пути к форме.
//
Функция ПодробнаяИнформацияПоОбмену(ИдентификаторНастройки) Экспорт
	
	Возврат "http://its.1c.ru/db/bspdoc#content:498:hdoc:issogl1_синхронизация_данных_в_распределенной_информационной_базе";

КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Для работы через подключение к корреспонденту через внешнее соединение или веб-сервис.

// Возвращает имена реквизитов и табличных частей плана обмена, перечисленных через запятую,
// которые являются общими для пары обменивающихся конфигураций.
//
// Параметры:
//	ВерсияКорреспондента - Строка - Номер версии корреспондента. Используется, например, для разного
//									состава общих данных узлов в зависимости от версии корреспондента.
//	ИмяФормы - Строка - Имя используемой формы настройки значений по умолчанию.
//						Возможно, например, использование различных форм для разных версий корреспондента.
//
// Возвращаемое значение:
//	Строка - Список имен реквизитов.
//
Функция ОбщиеДанныеУзлов(ВерсияКорреспондента, ИмяФормы) Экспорт
	
	Возврат "ДатаНачалаВыгрузкиДокументов";
	
КонецФункции

// Возвращает структуру отборов на узле плана обмена базы корреспондента с установленными значениями по умолчанию;
// Структура настроек повторяет состав реквизитов шапки и табличных частей плана обмена базы корреспондента;
// Для реквизитов шапки используются аналогичные по ключу и значению элементы структуры,
// а для табличных частей используются структуры,
// содержащие массивы значений полей табличных частей плана обмена.
// 
// Параметры:
//	ВерсияКорреспондента - Строка - Номер версии корреспондента. Используется, например, для
//									разного состава настроек на узле для разных версий корреспондента.
//	ИмяФормы - Строка - Имя используемой формы настройки узла. Возможно, например, использование
//						различных форм для разных версий корреспондента.
// 
// Возвращаемое значение:
//  СтруктураНастроек - Структура - структура отборов на узле плана обмена базы корреспондента.
// 
Функция НастройкаОтборовНаУзлеБазыКорреспондента(ВерсияКорреспондента, ИмяФормы, ИдентификаторНастройки) Экспорт
	
	Возврат Новый Структура;
КонецФункции

// Возвращает структуру значений по умолчанию для узла базы корреспондента;
// Структура настроек повторяет состав реквизитов шапки плана обмена базы корреспондента;
// Для реквизитов шапки используются аналогичные по ключу и значению элементы структуры.
// 
// Параметры:
//	ВерсияКорреспондента - Строка - Номер версии корреспондента. Используется, например, для разного
//									состава значений по умолчанию на узле для разных версий корреспондента.
//	ИмяФормы - Строка - Имя используемой формы настройки значений по умолчанию.
//						Возможно, например, использование различных форм для разных версий корреспондента.
// 
// Возвращаемое значение:
//  СтруктураНастроек - Структура - структура значений по умолчанию на узле плана обмена базы корреспондента.
//
Функция ЗначенияПоУмолчаниюНаУзлеБазыКорреспондента(ВерсияКорреспондента, ИмяФормы, ИдентификаторНастройки) Экспорт
	
	Возврат Новый Структура;
КонецФункции

// Возвращает строку описания ограничений миграции данных для базы корреспондента, которая отображается пользователю;
// Прикладной разработчик на основе установленных отборов на узле базы корреспондента должен сформировать строку
// описания ограничений  удобную для восприятия пользователем.
// 
// Параметры:
//	НастройкаОтборовНаУзле - Структура - структура отборов на узле плана обмена базы корреспондента,
//                                       полученная при помощи функции НастройкаОтборовНаУзлеБазыКорреспондента().
//	ВерсияКорреспондента - Строка - Номер версии корреспондента. Используется, например, для различного
//									описания ограничений передачи данных в зависимости от версии корреспондента.
// 
// Возвращаемое значение:
//	Строка - строка описания ограничений миграции данных для пользователя.
//
Функция ОписаниеОграниченийПередачиДанныхБазыКорреспондента(НастройкаОтборовНаУзле, ВерсияКорреспондента, ИдентификаторНастройки) Экспорт
	
	Возврат "";
КонецФункции

// Возвращает строку описания значений по умолчанию для базы корреспондента, которая отображается пользователю;
// Прикладной разработчик на основе установленных значений по умолчанию на узле базы корреспондента должен сформировать
// строку описания
// удобную для восприятия пользователем.
// 
// Параметры:
//  ЗначенияПоУмолчаниюНаУзле - Структура - структура значений по умолчанию на узле плана обмена базы корреспондента,
//                                       полученная при помощи функции ЗначенияПоУмолчаниюНаУзлеБазыКорреспондента().
//	ВерсияКорреспондента - Строка - Номер версии корреспондента. Используется, например, для различного
//									описания значений по умолчанию в зависимости от версии корреспондента.
// 
// Возвращаемое значение:
//  Строка - строка описания для пользователя значений по умолчанию.
//
Функция ОписаниеЗначенийПоУмолчаниюБазыКорреспондента(ЗначенияПоУмолчаниюНаУзле, ВерсияКорреспондента, ИдентификаторНастройки) Экспорт
	
	Возврат "";
КонецФункции

// Определяет текст пояснения для настройки параметров учета базы-корреспондента.
// 
// Параметры:
//	ВерсияКорреспондента - Строка - Номер версии корреспондента. Используется, например, для различного
//									пояснения для настройки параметров учета в зависимости от версии корреспондента.
// 
// Возвращаемое значение:
//  Строка - строка описания пояснения для настройки параметров учета базы-корреспондента.
//
Функция ПояснениеДляНастройкиПараметровУчетаБазыКорреспондента(ВерсияКорреспондента) Экспорт
	
	Возврат "";
КонецФункции

// Процедура предназначена для получения дополнительных данных, используемых при настройке обмена в базе-корреспонденте.
//
// Параметры:
//	ДополнительныеДанные - Структура. Дополнительные данные, которые будут использованы
//	в базе-корреспонденте при настройке обмена.
//	В качестве значений структуры применимы только значения, поддерживающие XDTO-сериализацию.
//
Процедура ПолучитьДополнительныеДанныеДляКорреспондента(ДополнительныеДанные) Экспорт
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий

// Обработчик события при подключении к корреспонденту.
// Событие возникает при успешном подключении к корреспонденту и получении версии конфигурации корреспондента
// при настройке обмена с использованием помощника через прямое подключение
// или при подключении к корреспонденту через Интернет.
// В обработчике можно проанализировать версию корреспондента и,
// если настройка обмена не поддерживается с корреспондентом указанной версии, то вызвать исключение.
//
// Параметры:
//	ВерсияКорреспондента - Строка - версия конфигурации корреспондента, например, "2.1.5.1".
//
Процедура ПриПодключенииККорреспонденту(ВерсияКорреспондента) Экспорт
	
КонецПроцедуры

// Обработчик события при отправке данных узла-отправителя.
// Событие возникает при отправке данных узла-отправителя из текущей базы в корреспондент,
// до помещения данных узла в сообщения обмена.
// В обработчике можно изменить отправляемые данные или вовсе отказаться от отправки данных узла.
//
// Параметры:
//	Отправитель - ПланОбменаОбъект, Структура - узел плана обмена, от имени которого выполняется отправка данных.
//	Игнорировать - Булево - признак отказа от выгрузки данных узла.
//							Если в обработчике установить значение этого параметра в Истина,
//							то отправка данных узла выполнена не будет. Значение по умолчанию - Ложь.
//
Процедура ПриОтправкеДанныхОтправителя(Отправитель, Игнорировать) Экспорт
	
КонецПроцедуры

// Обработчик события при получении данных узла-отправителя.
// Событие возникает при получении данных узла-отправителя,
// когда данные узла прочитаны из сообщения обмена, но не записаны в информационную базу.
// В обработчике можно изменить полученные данные или вовсе отказаться от получения данных узла.
//
// Параметры:
//	Отправитель - ПланОбменаОбъект, Структура - узел плана обмена, от имени которого выполняется получение данных.
//	Игнорировать - Булево - признак отказа от получения данных узла.
//							Если в обработчике установить значение этого параметра в Истина,
//							то получение данных узла выполнена не будет. Значение по умолчанию - Ложь.
//
Процедура ПриПолученииДанныхОтправителя(Отправитель, Игнорировать) Экспорт
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Константы и проверка параметров учета.

// Определяет текст пояснения для настройки параметров учета.
// 
// Возвращаемое значение:
//	Строка - строка описания пояснения для настройки параметров учета.
//
Функция ПояснениеДляНастройкиПараметровУчета() Экспорт
	
	Возврат "";
	
КонецФункции

// Проверяет корректность настройки параметров учета.
//
// Параметры:
//	Отказ - Булево - Признак невозможности продолжения настройки обмена из-за некорректно настроенных параметров учета.
//	Получатель - ПланОбменаСсылка - Узел обмена, для которого выполняется проверка параметров учета.
//	Сообщение - Строка - Содержит текст сообщения о некорректных параметрах учета.
//
Процедура ОбработчикПроверкиПараметровУчета(Отказ, Получатель, Сообщение) Экспорт
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Групповое изменение объектов.

// Возвращает реквизиты объекта, которые не рекомендуется редактировать
// с помощью обработки группового изменения реквизитов.
//
// Возвращаемое значение:
//  Массив - список имен реквизитов объекта.
Функция РеквизитыНеРедактируемыеВГрупповойОбработке() Экспорт
	
	Результат = Новый Массив;
	Результат.Добавить("РегистрироватьИзменения");
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли
