////////////////////////////////////////////////////////////////////////////////
// Подсистема "Демо: Заметки".
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

// Производит запись в служебных регистр информации о наличии заметки по предмету.
//
// Параметры совпадают с параметрами обработчика при записи у элемента справочника.
Процедура ПроверитьНаличиеЗаметокПоПредмету(Источник, Отказ) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда 
		Возврат; 
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ЗначениеЗаполнено(Источник.Предмет) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Заметки.Ссылка
	|ИЗ
	|	Справочник.Заметки КАК Заметки
	|ГДЕ
	|	Заметки.Предмет = &Предмет
	|	И Заметки.Автор = &Пользователь
	|	И Заметки.ПометкаУдаления = ЛОЖЬ";
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Предмет", Источник.Предмет);
	Запрос.УстановитьПараметр("Пользователь", Источник.Автор);
	Выборка = Запрос.Выполнить().Выбрать();
	ЕстьЗаметки = Выборка.Количество() > 0;

	НаборЗаписей = РегистрыСведений._ДемоНаличиеЗаметокПоПредмету.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Автор.Установить(Источник.Автор);
	НаборЗаписей.Отбор.Предмет.Установить(Источник.Предмет);
	
	Если ЕстьЗаметки Тогда 
		Если НаборЗаписей.Количество() = 0 Тогда
			НоваяЗапись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, Источник);
			НоваяЗапись.ЕстьЗаметки = Истина;				
		Иначе
			Для Каждого Запись Из НаборЗаписей Цикл
				Запись.ЕстьЗаметки = Истина;
			КонецЦикла;
		КонецЕсли;
	Иначе
		НаборЗаписей.Очистить();
	КонецЕсли;

	НаборЗаписей.Записать();
	
КонецПроцедуры

#КонецОбласти
