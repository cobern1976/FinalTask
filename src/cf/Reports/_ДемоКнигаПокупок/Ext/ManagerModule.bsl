#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Процедура формирования книги покупок.
//
// Параметры:
//  СтруктураПараметров	 - Структура - Параметры формирования отчета.
//  АдресХранилища		 - Строка - Адрес временного хранилища, куда будет
//   передан результат формирования книги покупок.
//
Процедура СформироватьОтчет(СтруктураПараметров, АдресХранилища) Экспорт

	ДанныеОтчета = Неопределено;
	// СтандартныеПодсистемы.РаботаСКонтрагентами
	Если ПроверкаКонтрагентов.ФормироватьОтчетСтандартнымСпособом(СтруктураПараметров, ДанныеОтчета) Тогда
	// Конец СтандартныеПодсистемы.РаботаСКонтрагентами
		ДанныеОтчета = ПолучитьДанныеОтчетаПокупок(СтруктураПараметров);
	КонецЕсли;
	
	Если НЕ СтруктураПараметров.ОтчетСРазделами Тогда
		
		СформироватьТабличныйДокумент(СтруктураПараметров, ДанныеОтчета);
		РезультатФормирования = Новый Структура("РезультатФормированияОтчета", СтруктураПараметров.РезультатФормированияОтчета);
		
	Иначе
		
		СформироватьТабличныйДокументПоРазделам(СтруктураПараметров, ДанныеОтчета);
		РезультатФормирования = СтруктураПараметров;
		
	КонецЕсли;
	
	// СтандартныеПодсистемы.РаботаСКонтрагентами
	ПроверкаКонтрагентов.ДополнитьРезультатФормированияОтчетаДаннымиПоПроверкеКонтрагентов(РезультатФормирования, СтруктураПараметров);
	// Конец СтандартныеПодсистемы.РаботаСКонтрагентами

	ПоместитьВоВременноеХранилище(РезультатФормирования, АдресХранилища);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьДанныеОтчетаПокупок(СтруктураПараметров)
		
	// Создаем запрос по счетам-фактурам.
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НАЧАЛОПЕРИОДА(_ДемоСчетФактураПолученный.Дата, КВАРТАЛ) КАК НалоговыйПериод,
	|	_ДемоСчетФактураПолученный.Контрагент КАК Контрагент,
	|	_ДемоСчетФактураПолученный.Продавец.ИНН КАК ПродавецИНН,
	|	_ДемоСчетФактураПолученный.Продавец.КПП КАК ПродавецКПП,
	|	_ДемоСчетФактураПолученный.Продавец КАК Продавец,
	|	_ДемоСчетФактураПолученный.Ссылка КАК СчетФактура,
	|	_ДемоСчетФактураПолученный.Дата КАК ДатаОплаты,
	|	_ДемоСчетФактураПолученный.Дата КАК СчетФактураДата,
	|	_ДемоСчетФактураПолученный.Дата КАК ДатаОприходования,
	|	_ДемоСчетФактураПолученный.Дата КАК ДатаПринятияНаУчет,
	|	_ДемоСчетФактураПолученный.Ссылка КАК СчетФактураДокумент,
	|	_ДемоСчетФактураПолученный.Номер КАК НомерСчетаФактуры,
	|	_ДемоСчетФактураПолученный.Дата КАК ДатаСчетаФактуры,
	|	_ДемоСчетФактураПолученный.Сумма КАК ВсегоПокупок,
	|	_ДемоСчетФактураПолученный.Сумма * 0.18 КАК НДС
	|ИЗ
	|	Документ._ДемоСчетФактураПолученный КАК _ДемоСчетФактураПолученный
	|ГДЕ
	|	_ДемоСчетФактураПолученный.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И _ДемоСчетФактураПолученный.ПометкаУдаления = ЛОЖЬ
	|
	|УПОРЯДОЧИТЬ ПО
	|	_ДемоСчетФактураПолученный.Дата";
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(СтруктураПараметров.НачалоПериода));
	Запрос.УстановитьПараметр("КонецПериода",  КонецДня(СтруктураПараметров.КонецПериода));
	
	Выборка = Запрос.Выполнить();

	// СтандартныеПодсистемы.РаботаСКонтрагентами
	ПроверкаКонтрагентов.ЗапомнитьДанныеОтчета(СтруктураПараметров, Выборка);
	// Конец СтандартныеПодсистемы.РаботаСКонтрагентами

	Возврат Выборка;

КонецФункции

Процедура СформироватьТабличныйДокумент(СтруктураПараметров, ДанныеОтчета)
	
	Макет 				= Отчеты._ДемоКнигаПокупок.ПолучитьМакет("КнигаПокупок735");
	ТабличныйДокумент 	= НовыйТабличныйДокументСШапкой(СтруктураПараметров);
		
	Счетчик = 0;
	Выборка = ДанныеОтчета.Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		ВывестиСтрокуОтчета(СтруктураПараметров, Выборка, ТабличныйДокумент, Макет, Счетчик);
	КонецЦикла;
	
	Секция = Макет.ПолучитьОбласть("Всего");
	ТабличныйДокумент.Вывести(Секция);
	
	Секция = Макет.ПолучитьОбласть("Подвал");
	ТабличныйДокумент.Вывести(Секция);
	
	СтруктураПараметров.РезультатФормированияОтчета = ТабличныйДокумент;

КонецПроцедуры

Процедура СформироватьТабличныйДокументПоРазделам(СтруктураПараметров, ДанныеОтчета)
	
	СквознойСчетчик 				= 0;
	СчетчикСтрокТекущегоСегмента	= 0;
	СчетчикСегментов 				= 0;
	Макет 							= Отчеты._ДемоКнигаПокупок.ПолучитьМакет("КнигаПокупок735");
	КоличествоСтрокВБлоке 			= СтруктураПараметров.КоличествоСтрокВБлоке;
	ТабличныйДокумент 				= НовыйТабличныйДокументСШапкой(СтруктураПараметров);
	ДанныеДляПроверкиКонтрагентов 	= СтруктураПараметров.ДанныеДляПроверкиКонтрагентов;
	Выборка 						= ДанныеОтчета.Выбрать();
	
	СтрокиПомещаютсяВРазделыБезОстатка = Выборка.Количество() % КоличествоСтрокВБлоке = 0;
	
	Пока Выборка.Следующий() Цикл
		
		ВывестиСтрокуОтчета(СтруктураПараметров, Выборка, ТабличныйДокумент, Макет, СквознойСчетчик, СчетчикСегментов);
		
		СчетчикСтрокТекущегоСегмента = СчетчикСтрокТекущегоСегмента + 1;
		
		Если СчетчикСтрокТекущегоСегмента >= КоличествоСтрокВБлоке Тогда
			
			// Предотвращаем случай, когда подвал будет находиться в разделе,
			// не имеющем ни единой строки.
			Если СтрокиПомещаютсяВРазделыБезОстатка
				И СквознойСчетчик = Выборка.Количество() Тогда
				
				Прервать;
				
			КонецЕсли;
			
			// СтандартныеПодсистемы.РаботаСКонтрагентами
			ПроверкаКонтрагентов.ДобавитьРазделОтчета(СтруктураПараметров, ЗаголовокЛиста(СчетчикСегментов), СчетчикСегментов, ТабличныйДокумент);
			// Конец СтандартныеПодсистемы.РаботаСКонтрагентами
			
			СчетчикСтрокТекущегоСегмента	= 0;
			СчетчикСегментов 				= СчетчикСегментов + 1;
			ТабличныйДокумент				= НовыйТабличныйДокументСШапкой(СтруктураПараметров);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Секция = Макет.ПолучитьОбласть("Всего");
	ТабличныйДокумент.Вывести(Секция);
	
	Секция = Макет.ПолучитьОбласть("Подвал");
	ТабличныйДокумент.Вывести(Секция);
	
	// СтандартныеПодсистемы.РаботаСКонтрагентами
	ПроверкаКонтрагентов.ДобавитьРазделОтчета(СтруктураПараметров, ЗаголовокЛиста(СчетчикСегментов), СчетчикСегментов, ТабличныйДокумент);
	// Конец СтандартныеПодсистемы.РаботаСКонтрагентами
	
	СтруктураПараметров.РезультатФормированияОтчета = ТабличныйДокумент;

КонецПроцедуры

Функция ЗаголовокЛиста(СчетчикСегментов)
	
	Возврат НСтр("ru = 'Раздел'") + " " + Строка(СчетчикСегментов + 1);
	
КонецФункции

Функция НовыйТабличныйДокументСШапкой(СтруктураПараметров)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ЧерноБелаяПечать = Истина;
	
	Макет = Отчеты._ДемоКнигаПокупок.ПолучитьМакет("КнигаПокупок735");
		
	Секция = Макет.ПолучитьОбласть("ШапкаИнформация");
	ТабличныйДокумент.Вывести(Секция);
	
	Секция = Макет.ПолучитьОбласть("Шапка");
	Секция.Параметры.УстановленныйОтбор = "";
	Секция.Параметры.НачалоПериода = Формат(СтруктураПараметров.НачалоПериода, "ДЛФ=D");
	Секция.Параметры.КонецПериода = Формат(СтруктураПараметров.КонецПериода, "ДЛФ=D");
	Секция.Параметры.НазваниеОрганизации = НСтр("ru='Демо организация'");
	
	ТабличныйДокумент.Вывести(Секция);
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура ВывестиСтрокуОтчета(СтруктураПараметров, Строка, ТабличныйДокумент, Макет, Счетчик, НомерРаздела = 0)
	
	Контрагент	= Строка.Контрагент;
	ИНН 		= Строка.ПродавецИНН;
	КПП			= Строка.ПродавецКПП;
	Дата 		= Строка.ДатаСчетаФактуры;
	
	Счетчик = Счетчик + 1;
	// СтандартныеПодсистемы.РаботаСКонтрагентами
	Если ПроверкаКонтрагентов.ВыводитьСтрокуОтчета(СтруктураПараметров, Контрагент, ИНН, КПП, Дата) Тогда
	// Конец СтандартныеПодсистемы.РаботаСКонтрагентами
	
		ОбластьТабличногоДокумента = НоваяСтрокаТабличногоДокумента(ТабличныйДокумент, Макет, Строка, Счетчик);
		
		// СтандартныеПодсистемы.РаботаСКонтрагентами
		ПроверкаКонтрагентов.ДобавитьКонтрагентаНаПроверку(СтруктураПараметров, ОбластьТабличногоДокумента.Верх, Контрагент, ИНН, КПП, Дата, НомерРаздела);
		// Конец СтандартныеПодсистемы.РаботаСКонтрагентами
		
	КонецЕсли;
	
КонецПроцедуры

Функция НоваяСтрокаТабличногоДокумента(ТабличныйДокумент, Макет, Выборка, Счетчик)
	
	СтрокаМакета = Макет.ПолучитьОбласть("Строка");
	
	// Заполнение параметров в строке.
	ЗаполнитьЗначенияСвойств(СтрокаМакета.Параметры, Выборка);
	СтрокаМакета.Параметры.НомерДата 	= Строка(Выборка.СчетФактураДата) + "/" + Строка(Выборка.НомерСчетаФактуры);
	СтрокаМакета.Параметры.Номер		= Счетчик;
	
	// Вывод строки
	Возврат ТабличныйДокумент.Вывести(СтрокаМакета);
	
КонецФункции

#КонецОбласти

#КонецЕсли