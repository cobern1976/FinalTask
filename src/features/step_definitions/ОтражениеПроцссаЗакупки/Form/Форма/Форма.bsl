//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"НетПроведенныхДокументовПокупки()","НетПроведенныхДокументовПокупки","Допустим Нет проведенных документов Покупки");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ПокупкаОтраженаКорректно()","ПокупкаОтраженаКорректно","Тогда Покупка отражена корректно");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Допустим Нет проведенных документов Покупки
//@НетПроведенныхДокументовПокупки()
Процедура НетПроведенныхДокументовПокупки() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	//ВызватьИсключение "Не реализовано.";
	ОтменитьПроведениеДокументовПокупки();
КонецПроцедуры

&НаСервере
Процедура ОтменитьПроведениеДокументовПокупки()

	Запрос = Новый Запрос;
	Запрос.Текст =  "ВЫБРАТЬ
	                |	Покупка.Ссылка
	                |ИЗ
	                |	Документ.Покупка КАК Покупка
	                |ГДЕ
	                |	Покупка.Проведен = ИСТИНА";
	выборка = Запрос.Выполнить().Выбрать();
	Пока выборка.Следующий() Цикл
		докОбъект = выборка.Ссылка.ПолучитьОбъект();
		докОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	КонецЦикла;

КонецПроцедуры // ОтменитьПроведениеДокументовПокупки()

&НаКлиенте
//Тогда Покупка отражена корректно
//@ПокупкаОтраженаКорректно()
Процедура ПокупкаОтраженаКорректно() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	//ВызватьИсключение "Не реализовано.";
КонецПроцедуры

//окончание текста модуля