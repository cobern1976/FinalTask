//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ПровожуДокументПродажа()","ПровожуДокументПродажа","Допустим Провожу документ Продажа");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Допустим Провожу документ Продажа
//@ПровожуДокументПродажа()
Процедура ПровожуДокументПродажа() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	//ВызватьИсключение "Не реализовано.";
	Если КонтекстСохраняемый.Свойство("ТестовоеПриложение") Тогда
		тестовоеПр= Новый ТестируемоеПриложение;
		МассивОкон = тестовоеПр.НайтиОбъекты(Тип("ТестируемоеОкноКлиентскогоПриложения"), "(Тест) Продажа*");
		Если МассивОкон.Количество() = 0 Тогда
			ВызватьИсключение("Не найден открытый документ продажи");
		Иначе
			ОкноСообщений=МассивОкон[0];
			мсСообщений = ОкноСообщений.ПолучитьТекстыСообщенийПользователю();
			Если мсСообщений.Количество() = 0 Тогда
				ВызватьИсключение "Не реализовано сообщение пользователю о недостатке товара на складе";
			Иначе
				Если Найти(мсСообщений[0],"недостаточно остатка на складе")=0 Тогда
					ВызватьИсключение "Проверка остатков при Продаже - не реализована";
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	Иначе
		ВызватьИсключение "КонтекстСохраняемый не инициализирован";
	КонецЕсли;
КонецПроцедуры

//окончание текста модуля